package mytest;

import instructions.Instruction;

public class Visitors implements MyTestVisitor{

	Instruction inst = new Instruction();
	
	@Override
	public Object visit(SimpleNode node, Object data) {
		throw new RuntimeException("Visit SimpleNode");
	}

	@Override
	public Object visit(ASTprog node, Object data) {
		node.childrenAccept(this, data);
		return "Program";
	}

	@Override
	public Object visit(ASTdecl node, Object data) {
		Object reg = node.jjtGetChild(0).jjtAccept(this, data);
		Object val = node.jjtGetChild(1).jjtAccept(this, data);
		
		inst.movInstr(reg, val);
		
		return "decl";
	}
	
	@Override
	public Object visit(ASTadd node, Object data) {
		Object reg = node.jjtGetChild(0).jjtAccept(this, data);
		Object arg1 = node.jjtGetChild(1).jjtAccept(this, data);
		Object arg2 = node.jjtGetChild(2).jjtAccept(this, data);
		
		inst.addInstr(reg, arg1.toString(), arg2.toString());
		
		return null;
	}

	@Override
	public Object visit(ASTsub node, Object data) {
		// TODO Auto-generated method stub
		return null;
	}
	
	@Override
	public Object visit(ASTregister node, Object data) {
		String valStr = (String) node.data.get("reg");
		
		return valStr;
	}

	@Override
	public Object visit(ASTnumber node, Object data) {
		String valStr = (String) node.data.get("value");
		valStr = valStr.replace("#", "");
		int valInt = Integer.parseInt(valStr);	
		
		return valStr;
	}
	
	
	
	//print la table des registres
	public void print(){
		inst.printRegisters();
	}

}
