/*@bgen(jjtree) Generated By:JJTree: Do not edit this line. MyParser.jj */
/*@egen*//**
 * JavaCC template file created by SF JavaCC plugin 1.5.28+ wizard for JavaCC 1.5.0+
 */options{              
                
                         
 /*COMMON_TOKEN_ACTION=true;*/
 /*DEBUG_PARSER = true;*/
}
PARSER_BEGIN(MyParser)package compAndInt;

import java.io.*;
import java.util.HashMap;

import instructions.*;
import memory.Memory;
import registers.*;

public class MyParser/*@bgen(jjtree)*/implements MyParserTreeConstants/*@egen*/ {/*@bgen(jjtree)*/
  protected static JJTMyParserState jjtree = new JJTMyParserState();

/*@egen*/
}PARSER_END(MyParser)SKIP :{  " "| "\r"| "\t"| "\n"}TOKEN : {
  /*CONDITIONS FOR LDR/STR*/
  < B: "b" > /*use for branch and branch link too*/
| < H: "h" >
  /*| < S: "s" > is already defined with SCND */

  /*for branchLink*/
|  < L: "l" >

  /*OPTIONS FOR STACK*/
| < AMODE : "ia" | "fd" | "ib" | "ed" | "da" | "fa" | "db" | "ea" >

  /*CONDITIONS*/
| < COND: "eq" | "ne" | "cs" | "hs" | "cc" | "lo" | "mi" | "pl" | "vs" | "vc" | "hi" | "ls" | "ge" | "lt" | "gt" | "le" >
| < SCND: "s" >

  /*SHIFT*/
| < LSL: "lsl" >
| < LSR: "lsr" >
| < ASR: "asr" >
| < ROR: "ror" >
| < SHIFT: "<<" | ">>" > 

  /*ARITHMETIQUE*/| < MOV : "mov" >
| < MVN : "mvn" >
| < ADD : "add" >
| < ADC : "adc" >
| < SUB : "sub" >
| < SBC : "sbc" >
| < RSB : "rsb" >
| < RSC : "rsc" >

| < MLA : "mla" >
| < MUL : "mul" >
| < SMLAL : "smlal" >
| < SMULL : "smull" >
| < UMLAL : "umlal" >
| < UMULL : "umull" >

  /*COMPARISON*/
| < CMP : "cmp" >
| < CMN : "cmn" >
| < TEQ : "teq" >
| < TST : "tst" >

  /*LOGIC*/
| < AND : "and" >
| < BIC : "bic" >
| < EOR : "eor" >
| < ORR : "orr" >
  /*LDR/STR*/
| < LDR : "ldr" >
| < STR : "str" >

  /*LDM/STM*/
| < LDM : "ldm" >
| < STM : "stm" >

  /*SWP*/
| < SWP : "swp" >

  /*VAR*/
| < NUMBER : ("#") ("-") ([ "0"-"9" ])+ | ("#") ([ "0"-"9" ])+  >
| < REGISTER  : "r0" | "r1" | "r2" | "r3" | "r4" | "r5" | "r6" | "r7" | "r8" | "r9" | "r10" | "r11" | "r12" | ("r13" | "sp") | ( "r14"| "lr") | ("r15"|"pc") >
| < HEXA : ("#0x") (["0"-"9","a"-"f"])+ >
| < NUM : ([ "0"-"9" ])+ >
| < LABEL : (".") (["0"-"9","a"-"z","A"-"Z"])+ >}SimpleNode prog():
{/*@bgen(jjtree) prog */
  ASTprog jjtn000 = new ASTprog(JJTPROG);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) prog */
  try {
/*@egen*/
  (instr())* < EOF >/*@bgen(jjtree)*/
                     {
                       jjtree.closeNodeScope(jjtn000, true);
                       jjtc000 = false;
                     }
/*@egen*/ { return jjtn000;}/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/}

void instr()      :
{}{
  mov()
| mvn()
| add()
| adc()
| sub()
| sbc()
| rsb()
| rsc()

| mla()
| mul()
| smlal()
| smull()
| umlal()
| umull()

| cmp()
| cmn()
| teq()
| tst()

| and()
| bic()
| eor()
| orr()

| ldr()
| str()

| ldm()
| stm()

| swp()

| branchNode()
| label()

}

void mov()      :
{}
{
   <MOV>
   (
    (/*@bgen(jjtree) #decl( 2) */
      {
        ASTdecl jjtn001 = new ASTdecl(JJTDECL);
        boolean jjtc001 = true;
        jjtree.openNodeScope(jjtn001);
      }
      try {
/*@egen*/
      (register() "," ( hexa()| numOrNumShift() | regOrRegShift()))/*@bgen(jjtree)*/
      } catch (Throwable jjte001) {
        if (jjtc001) {
          jjtree.clearNodeScope(jjtn001);
          jjtc001 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte001 instanceof RuntimeException) {
          throw (RuntimeException)jjte001;
        }
        if (jjte001 instanceof ParseException) {
          throw (ParseException)jjte001;
        }
        throw (Error)jjte001;
      } finally {
        if (jjtc001) {
          jjtree.closeNodeScope(jjtn001,  2);
        }
      }
/*@egen*/         
    |/*@bgen(jjtree) #declS( 2) */
      {
        ASTdeclS jjtn002 = new ASTdeclS(JJTDECLS);
        boolean jjtc002 = true;
        jjtree.openNodeScope(jjtn002);
      }
      try {
/*@egen*/ (<SCND> register() "," ( hexa()| numOrNumShift() | regOrRegShift()))/*@bgen(jjtree)*/
      } catch (Throwable jjte002) {
        if (jjtc002) {
          jjtree.clearNodeScope(jjtn002);
          jjtc002 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte002 instanceof RuntimeException) {
          throw (RuntimeException)jjte002;
        }
        if (jjte002 instanceof ParseException) {
          throw (ParseException)jjte002;
        }
        throw (Error)jjte002;
      } finally {
        if (jjtc002) {
          jjtree.closeNodeScope(jjtn002,  2);
        }
      }
/*@egen*/          
    )
   |cond() 
    (/*@bgen(jjtree) #declC( 3) */
      {
        ASTdeclC jjtn003 = new ASTdeclC(JJTDECLC);
        boolean jjtc003 = true;
        jjtree.openNodeScope(jjtn003);
      }
      try {
/*@egen*/
      (register() "," ( hexa()| numOrNumShift() | regOrRegShift()))/*@bgen(jjtree)*/
      } catch (Throwable jjte003) {
        if (jjtc003) {
          jjtree.clearNodeScope(jjtn003);
          jjtc003 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte003 instanceof RuntimeException) {
          throw (RuntimeException)jjte003;
        }
        if (jjte003 instanceof ParseException) {
          throw (ParseException)jjte003;
        }
        throw (Error)jjte003;
      } finally {
        if (jjtc003) {
          jjtree.closeNodeScope(jjtn003,  3);
        }
      }
/*@egen*/          
    |/*@bgen(jjtree) #declCS( 3) */
      {
        ASTdeclCS jjtn004 = new ASTdeclCS(JJTDECLCS);
        boolean jjtc004 = true;
        jjtree.openNodeScope(jjtn004);
      }
      try {
/*@egen*/ (<SCND>  register() "," ( hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
      } catch (Throwable jjte004) {
        if (jjtc004) {
          jjtree.clearNodeScope(jjtn004);
          jjtc004 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte004 instanceof RuntimeException) {
          throw (RuntimeException)jjte004;
        }
        if (jjte004 instanceof ParseException) {
          throw (ParseException)jjte004;
        }
        throw (Error)jjte004;
      } finally {
        if (jjtc004) {
          jjtree.closeNodeScope(jjtn004,  3);
        }
      }
/*@egen*/           
    )
   )
}

void mvn()      :
{}
{
   <MVN>
   (
    (/*@bgen(jjtree) #decln( 2) */
      {
        ASTdecln jjtn001 = new ASTdecln(JJTDECLN);
        boolean jjtc001 = true;
        jjtree.openNodeScope(jjtn001);
      }
      try {
/*@egen*/
      (register() "," ( hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
      } catch (Throwable jjte001) {
        if (jjtc001) {
          jjtree.clearNodeScope(jjtn001);
          jjtc001 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte001 instanceof RuntimeException) {
          throw (RuntimeException)jjte001;
        }
        if (jjte001 instanceof ParseException) {
          throw (ParseException)jjte001;
        }
        throw (Error)jjte001;
      } finally {
        if (jjtc001) {
          jjtree.closeNodeScope(jjtn001,  2);
        }
      }
/*@egen*/          
    |/*@bgen(jjtree) #declnS( 2) */
      {
        ASTdeclnS jjtn002 = new ASTdeclnS(JJTDECLNS);
        boolean jjtc002 = true;
        jjtree.openNodeScope(jjtn002);
      }
      try {
/*@egen*/ (<SCND> register() "," ( hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
      } catch (Throwable jjte002) {
        if (jjtc002) {
          jjtree.clearNodeScope(jjtn002);
          jjtc002 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte002 instanceof RuntimeException) {
          throw (RuntimeException)jjte002;
        }
        if (jjte002 instanceof ParseException) {
          throw (ParseException)jjte002;
        }
        throw (Error)jjte002;
      } finally {
        if (jjtc002) {
          jjtree.closeNodeScope(jjtn002,  2);
        }
      }
/*@egen*/           
    )
   |cond() 
    (/*@bgen(jjtree) #declnC( 3) */
      {
        ASTdeclnC jjtn003 = new ASTdeclnC(JJTDECLNC);
        boolean jjtc003 = true;
        jjtree.openNodeScope(jjtn003);
      }
      try {
/*@egen*/
      (register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
      } catch (Throwable jjte003) {
        if (jjtc003) {
          jjtree.clearNodeScope(jjtn003);
          jjtc003 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte003 instanceof RuntimeException) {
          throw (RuntimeException)jjte003;
        }
        if (jjte003 instanceof ParseException) {
          throw (ParseException)jjte003;
        }
        throw (Error)jjte003;
      } finally {
        if (jjtc003) {
          jjtree.closeNodeScope(jjtn003,  3);
        }
      }
/*@egen*/           
    |/*@bgen(jjtree) #declnCS( 3) */
      {
        ASTdeclnCS jjtn004 = new ASTdeclnCS(JJTDECLNCS);
        boolean jjtc004 = true;
        jjtree.openNodeScope(jjtn004);
      }
      try {
/*@egen*/ (<SCND> register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
      } catch (Throwable jjte004) {
        if (jjtc004) {
          jjtree.clearNodeScope(jjtn004);
          jjtc004 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte004 instanceof RuntimeException) {
          throw (RuntimeException)jjte004;
        }
        if (jjte004 instanceof ParseException) {
          throw (ParseException)jjte004;
        }
        throw (Error)jjte004;
      } finally {
        if (jjtc004) {
          jjtree.closeNodeScope(jjtn004,  3);
        }
      }
/*@egen*/            
    )
   )
}

void add()     :
{}
{
  <ADD>
  (
    (/*@bgen(jjtree) #add( 3) */
      {
        ASTadd jjtn001 = new ASTadd(JJTADD);
        boolean jjtc001 = true;
        jjtree.openNodeScope(jjtn001);
      }
      try {
/*@egen*/      (register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
      } catch (Throwable jjte001) {
        if (jjtc001) {
          jjtree.clearNodeScope(jjtn001);
          jjtc001 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte001 instanceof RuntimeException) {
          throw (RuntimeException)jjte001;
        }
        if (jjte001 instanceof ParseException) {
          throw (ParseException)jjte001;
        }
        throw (Error)jjte001;
      } finally {
        if (jjtc001) {
          jjtree.closeNodeScope(jjtn001,  3);
        }
      }
/*@egen*/        
    |/*@bgen(jjtree) #addS( 3) */
      {
        ASTaddS jjtn002 = new ASTaddS(JJTADDS);
        boolean jjtc002 = true;
        jjtree.openNodeScope(jjtn002);
      }
      try {
/*@egen*/ (<SCND> register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
      } catch (Throwable jjte002) {
        if (jjtc002) {
          jjtree.clearNodeScope(jjtn002);
          jjtc002 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte002 instanceof RuntimeException) {
          throw (RuntimeException)jjte002;
        }
        if (jjte002 instanceof ParseException) {
          throw (ParseException)jjte002;
        }
        throw (Error)jjte002;
      } finally {
        if (jjtc002) {
          jjtree.closeNodeScope(jjtn002,  3);
        }
      }
/*@egen*/         
    )

  | cond()
    (/*@bgen(jjtree) #addC( 4) */
     {
       ASTaddC jjtn003 = new ASTaddC(JJTADDC);
       boolean jjtc003 = true;
       jjtree.openNodeScope(jjtn003);
     }
     try {
/*@egen*/     (register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
     } catch (Throwable jjte003) {
       if (jjtc003) {
         jjtree.clearNodeScope(jjtn003);
         jjtc003 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte003 instanceof RuntimeException) {
         throw (RuntimeException)jjte003;
       }
       if (jjte003 instanceof ParseException) {
         throw (ParseException)jjte003;
       }
       throw (Error)jjte003;
     } finally {
       if (jjtc003) {
         jjtree.closeNodeScope(jjtn003,  4);
       }
     }
/*@egen*/         
   |/*@bgen(jjtree) #addCS( 4) */
     {
       ASTaddCS jjtn004 = new ASTaddCS(JJTADDCS);
       boolean jjtc004 = true;
       jjtree.openNodeScope(jjtn004);
     }
     try {
/*@egen*/ (<SCND> register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
     } catch (Throwable jjte004) {
       if (jjtc004) {
         jjtree.clearNodeScope(jjtn004);
         jjtc004 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte004 instanceof RuntimeException) {
         throw (RuntimeException)jjte004;
       }
       if (jjte004 instanceof ParseException) {
         throw (ParseException)jjte004;
       }
       throw (Error)jjte004;
     } finally {
       if (jjtc004) {
         jjtree.closeNodeScope(jjtn004,  4);
       }
     }
/*@egen*/                 )
   )
}

void adc()     :
{}
{
  <ADC>
  (
    (/*@bgen(jjtree) #adc( 3) */
      {
        ASTadc jjtn001 = new ASTadc(JJTADC);
        boolean jjtc001 = true;
        jjtree.openNodeScope(jjtn001);
      }
      try {
/*@egen*/
      (register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
      } catch (Throwable jjte001) {
        if (jjtc001) {
          jjtree.clearNodeScope(jjtn001);
          jjtc001 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte001 instanceof RuntimeException) {
          throw (RuntimeException)jjte001;
        }
        if (jjte001 instanceof ParseException) {
          throw (ParseException)jjte001;
        }
        throw (Error)jjte001;
      } finally {
        if (jjtc001) {
          jjtree.closeNodeScope(jjtn001,  3);
        }
      }
/*@egen*/        
    |/*@bgen(jjtree) #adcS( 3) */
      {
        ASTadcS jjtn002 = new ASTadcS(JJTADCS);
        boolean jjtc002 = true;
        jjtree.openNodeScope(jjtn002);
      }
      try {
/*@egen*/ (<SCND> register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
      } catch (Throwable jjte002) {
        if (jjtc002) {
          jjtree.clearNodeScope(jjtn002);
          jjtc002 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte002 instanceof RuntimeException) {
          throw (RuntimeException)jjte002;
        }
        if (jjte002 instanceof ParseException) {
          throw (ParseException)jjte002;
        }
        throw (Error)jjte002;
      } finally {
        if (jjtc002) {
          jjtree.closeNodeScope(jjtn002,  3);
        }
      }
/*@egen*/         
    )

  | cond()
    (/*@bgen(jjtree) #adcC( 4) */
     {
       ASTadcC jjtn003 = new ASTadcC(JJTADCC);
       boolean jjtc003 = true;
       jjtree.openNodeScope(jjtn003);
     }
     try {
/*@egen*/
     (register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
     } catch (Throwable jjte003) {
       if (jjtc003) {
         jjtree.clearNodeScope(jjtn003);
         jjtc003 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte003 instanceof RuntimeException) {
         throw (RuntimeException)jjte003;
       }
       if (jjte003 instanceof ParseException) {
         throw (ParseException)jjte003;
       }
       throw (Error)jjte003;
     } finally {
       if (jjtc003) {
         jjtree.closeNodeScope(jjtn003,  4);
       }
     }
/*@egen*/         
   |/*@bgen(jjtree) #adcCS( 4) */
     {
       ASTadcCS jjtn004 = new ASTadcCS(JJTADCCS);
       boolean jjtc004 = true;
       jjtree.openNodeScope(jjtn004);
     }
     try {
/*@egen*/ (<SCND> register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
     } catch (Throwable jjte004) {
       if (jjtc004) {
         jjtree.clearNodeScope(jjtn004);
         jjtc004 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte004 instanceof RuntimeException) {
         throw (RuntimeException)jjte004;
       }
       if (jjte004 instanceof ParseException) {
         throw (ParseException)jjte004;
       }
       throw (Error)jjte004;
     } finally {
       if (jjtc004) {
         jjtree.closeNodeScope(jjtn004,  4);
       }
     }
/*@egen*/            
     )
   )
}

void sub()     :
{}
{
  <SUB>
  (
    (/*@bgen(jjtree) #sub( 3) */
      {
        ASTsub jjtn001 = new ASTsub(JJTSUB);
        boolean jjtc001 = true;
        jjtree.openNodeScope(jjtn001);
      }
      try {
/*@egen*/
      (register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
      } catch (Throwable jjte001) {
        if (jjtc001) {
          jjtree.clearNodeScope(jjtn001);
          jjtc001 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte001 instanceof RuntimeException) {
          throw (RuntimeException)jjte001;
        }
        if (jjte001 instanceof ParseException) {
          throw (ParseException)jjte001;
        }
        throw (Error)jjte001;
      } finally {
        if (jjtc001) {
          jjtree.closeNodeScope(jjtn001,  3);
        }
      }
/*@egen*/        
    |/*@bgen(jjtree) #subS( 3) */
      {
        ASTsubS jjtn002 = new ASTsubS(JJTSUBS);
        boolean jjtc002 = true;
        jjtree.openNodeScope(jjtn002);
      }
      try {
/*@egen*/ (<SCND> register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
      } catch (Throwable jjte002) {
        if (jjtc002) {
          jjtree.clearNodeScope(jjtn002);
          jjtc002 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte002 instanceof RuntimeException) {
          throw (RuntimeException)jjte002;
        }
        if (jjte002 instanceof ParseException) {
          throw (ParseException)jjte002;
        }
        throw (Error)jjte002;
      } finally {
        if (jjtc002) {
          jjtree.closeNodeScope(jjtn002,  3);
        }
      }
/*@egen*/         
    )

  | cond()
    (/*@bgen(jjtree) #subC( 4) */
     {
       ASTsubC jjtn003 = new ASTsubC(JJTSUBC);
       boolean jjtc003 = true;
       jjtree.openNodeScope(jjtn003);
     }
     try {
/*@egen*/
     (register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
     } catch (Throwable jjte003) {
       if (jjtc003) {
         jjtree.clearNodeScope(jjtn003);
         jjtc003 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte003 instanceof RuntimeException) {
         throw (RuntimeException)jjte003;
       }
       if (jjte003 instanceof ParseException) {
         throw (ParseException)jjte003;
       }
       throw (Error)jjte003;
     } finally {
       if (jjtc003) {
         jjtree.closeNodeScope(jjtn003,  4);
       }
     }
/*@egen*/         
   |/*@bgen(jjtree) #subCS( 4) */
     {
       ASTsubCS jjtn004 = new ASTsubCS(JJTSUBCS);
       boolean jjtc004 = true;
       jjtree.openNodeScope(jjtn004);
     }
     try {
/*@egen*/ (<SCND> register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
     } catch (Throwable jjte004) {
       if (jjtc004) {
         jjtree.clearNodeScope(jjtn004);
         jjtc004 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte004 instanceof RuntimeException) {
         throw (RuntimeException)jjte004;
       }
       if (jjte004 instanceof ParseException) {
         throw (ParseException)jjte004;
       }
       throw (Error)jjte004;
     } finally {
       if (jjtc004) {
         jjtree.closeNodeScope(jjtn004,  4);
       }
     }
/*@egen*/            
     )
   )
}

void sbc()     :
{}
{
  <SBC>
  (
    (/*@bgen(jjtree) #sbc( 3) */
      {
        ASTsbc jjtn001 = new ASTsbc(JJTSBC);
        boolean jjtc001 = true;
        jjtree.openNodeScope(jjtn001);
      }
      try {
/*@egen*/
      (register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
      } catch (Throwable jjte001) {
        if (jjtc001) {
          jjtree.clearNodeScope(jjtn001);
          jjtc001 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte001 instanceof RuntimeException) {
          throw (RuntimeException)jjte001;
        }
        if (jjte001 instanceof ParseException) {
          throw (ParseException)jjte001;
        }
        throw (Error)jjte001;
      } finally {
        if (jjtc001) {
          jjtree.closeNodeScope(jjtn001,  3);
        }
      }
/*@egen*/        
    |/*@bgen(jjtree) #sbcS( 3) */
      {
        ASTsbcS jjtn002 = new ASTsbcS(JJTSBCS);
        boolean jjtc002 = true;
        jjtree.openNodeScope(jjtn002);
      }
      try {
/*@egen*/ (<SCND> register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
      } catch (Throwable jjte002) {
        if (jjtc002) {
          jjtree.clearNodeScope(jjtn002);
          jjtc002 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte002 instanceof RuntimeException) {
          throw (RuntimeException)jjte002;
        }
        if (jjte002 instanceof ParseException) {
          throw (ParseException)jjte002;
        }
        throw (Error)jjte002;
      } finally {
        if (jjtc002) {
          jjtree.closeNodeScope(jjtn002,  3);
        }
      }
/*@egen*/         
    )

  | cond()
    (/*@bgen(jjtree) #sbcC( 4) */
     {
       ASTsbcC jjtn003 = new ASTsbcC(JJTSBCC);
       boolean jjtc003 = true;
       jjtree.openNodeScope(jjtn003);
     }
     try {
/*@egen*/
     (register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
     } catch (Throwable jjte003) {
       if (jjtc003) {
         jjtree.clearNodeScope(jjtn003);
         jjtc003 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte003 instanceof RuntimeException) {
         throw (RuntimeException)jjte003;
       }
       if (jjte003 instanceof ParseException) {
         throw (ParseException)jjte003;
       }
       throw (Error)jjte003;
     } finally {
       if (jjtc003) {
         jjtree.closeNodeScope(jjtn003,  4);
       }
     }
/*@egen*/         
   |/*@bgen(jjtree) #sbcCS( 4) */
     {
       ASTsbcCS jjtn004 = new ASTsbcCS(JJTSBCCS);
       boolean jjtc004 = true;
       jjtree.openNodeScope(jjtn004);
     }
     try {
/*@egen*/ (<SCND> register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
     } catch (Throwable jjte004) {
       if (jjtc004) {
         jjtree.clearNodeScope(jjtn004);
         jjtc004 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte004 instanceof RuntimeException) {
         throw (RuntimeException)jjte004;
       }
       if (jjte004 instanceof ParseException) {
         throw (ParseException)jjte004;
       }
       throw (Error)jjte004;
     } finally {
       if (jjtc004) {
         jjtree.closeNodeScope(jjtn004,  4);
       }
     }
/*@egen*/            
     )
   )
}

void rsb()     :
{}
{
  <RSB>
  (
    (/*@bgen(jjtree) #rsb( 3) */
      {
        ASTrsb jjtn001 = new ASTrsb(JJTRSB);
        boolean jjtc001 = true;
        jjtree.openNodeScope(jjtn001);
      }
      try {
/*@egen*/
      (register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
      } catch (Throwable jjte001) {
        if (jjtc001) {
          jjtree.clearNodeScope(jjtn001);
          jjtc001 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte001 instanceof RuntimeException) {
          throw (RuntimeException)jjte001;
        }
        if (jjte001 instanceof ParseException) {
          throw (ParseException)jjte001;
        }
        throw (Error)jjte001;
      } finally {
        if (jjtc001) {
          jjtree.closeNodeScope(jjtn001,  3);
        }
      }
/*@egen*/        
    |/*@bgen(jjtree) #rsbS( 3) */
      {
        ASTrsbS jjtn002 = new ASTrsbS(JJTRSBS);
        boolean jjtc002 = true;
        jjtree.openNodeScope(jjtn002);
      }
      try {
/*@egen*/ (<SCND> register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
      } catch (Throwable jjte002) {
        if (jjtc002) {
          jjtree.clearNodeScope(jjtn002);
          jjtc002 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte002 instanceof RuntimeException) {
          throw (RuntimeException)jjte002;
        }
        if (jjte002 instanceof ParseException) {
          throw (ParseException)jjte002;
        }
        throw (Error)jjte002;
      } finally {
        if (jjtc002) {
          jjtree.closeNodeScope(jjtn002,  3);
        }
      }
/*@egen*/         
    )

  | cond()
    (/*@bgen(jjtree) #rsbC( 4) */
     {
       ASTrsbC jjtn003 = new ASTrsbC(JJTRSBC);
       boolean jjtc003 = true;
       jjtree.openNodeScope(jjtn003);
     }
     try {
/*@egen*/
     (register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
     } catch (Throwable jjte003) {
       if (jjtc003) {
         jjtree.clearNodeScope(jjtn003);
         jjtc003 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte003 instanceof RuntimeException) {
         throw (RuntimeException)jjte003;
       }
       if (jjte003 instanceof ParseException) {
         throw (ParseException)jjte003;
       }
       throw (Error)jjte003;
     } finally {
       if (jjtc003) {
         jjtree.closeNodeScope(jjtn003,  4);
       }
     }
/*@egen*/         
   |/*@bgen(jjtree) #rsbCS( 4) */
     {
       ASTrsbCS jjtn004 = new ASTrsbCS(JJTRSBCS);
       boolean jjtc004 = true;
       jjtree.openNodeScope(jjtn004);
     }
     try {
/*@egen*/ (<SCND> register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
     } catch (Throwable jjte004) {
       if (jjtc004) {
         jjtree.clearNodeScope(jjtn004);
         jjtc004 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte004 instanceof RuntimeException) {
         throw (RuntimeException)jjte004;
       }
       if (jjte004 instanceof ParseException) {
         throw (ParseException)jjte004;
       }
       throw (Error)jjte004;
     } finally {
       if (jjtc004) {
         jjtree.closeNodeScope(jjtn004,  4);
       }
     }
/*@egen*/            
     )
   )
}

void rsc()     :
{}
{
  <RSC>
  (
    (/*@bgen(jjtree) #rsc( 3) */
      {
        ASTrsc jjtn001 = new ASTrsc(JJTRSC);
        boolean jjtc001 = true;
        jjtree.openNodeScope(jjtn001);
      }
      try {
/*@egen*/
      (register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
      } catch (Throwable jjte001) {
        if (jjtc001) {
          jjtree.clearNodeScope(jjtn001);
          jjtc001 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte001 instanceof RuntimeException) {
          throw (RuntimeException)jjte001;
        }
        if (jjte001 instanceof ParseException) {
          throw (ParseException)jjte001;
        }
        throw (Error)jjte001;
      } finally {
        if (jjtc001) {
          jjtree.closeNodeScope(jjtn001,  3);
        }
      }
/*@egen*/        
    |/*@bgen(jjtree) #rscS( 3) */
      {
        ASTrscS jjtn002 = new ASTrscS(JJTRSCS);
        boolean jjtc002 = true;
        jjtree.openNodeScope(jjtn002);
      }
      try {
/*@egen*/ (<SCND> register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
      } catch (Throwable jjte002) {
        if (jjtc002) {
          jjtree.clearNodeScope(jjtn002);
          jjtc002 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte002 instanceof RuntimeException) {
          throw (RuntimeException)jjte002;
        }
        if (jjte002 instanceof ParseException) {
          throw (ParseException)jjte002;
        }
        throw (Error)jjte002;
      } finally {
        if (jjtc002) {
          jjtree.closeNodeScope(jjtn002,  3);
        }
      }
/*@egen*/         
    )

  | cond()
    (/*@bgen(jjtree) #rscC( 4) */
     {
       ASTrscC jjtn003 = new ASTrscC(JJTRSCC);
       boolean jjtc003 = true;
       jjtree.openNodeScope(jjtn003);
     }
     try {
/*@egen*/
     (register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
     } catch (Throwable jjte003) {
       if (jjtc003) {
         jjtree.clearNodeScope(jjtn003);
         jjtc003 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte003 instanceof RuntimeException) {
         throw (RuntimeException)jjte003;
       }
       if (jjte003 instanceof ParseException) {
         throw (ParseException)jjte003;
       }
       throw (Error)jjte003;
     } finally {
       if (jjtc003) {
         jjtree.closeNodeScope(jjtn003,  4);
       }
     }
/*@egen*/         
   |/*@bgen(jjtree) #rscCS( 4) */
     {
       ASTrscCS jjtn004 = new ASTrscCS(JJTRSCCS);
       boolean jjtc004 = true;
       jjtree.openNodeScope(jjtn004);
     }
     try {
/*@egen*/ (<SCND> register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
     } catch (Throwable jjte004) {
       if (jjtc004) {
         jjtree.clearNodeScope(jjtn004);
         jjtc004 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte004 instanceof RuntimeException) {
         throw (RuntimeException)jjte004;
       }
       if (jjte004 instanceof ParseException) {
         throw (ParseException)jjte004;
       }
       throw (Error)jjte004;
     } finally {
       if (jjtc004) {
         jjtree.closeNodeScope(jjtn004,  4);
       }
     }
/*@egen*/            
     )
   )
}

void mla()     :
{}
{
  <MLA>
  (
    (/*@bgen(jjtree) #mla( 4) */
      {
        ASTmla jjtn001 = new ASTmla(JJTMLA);
        boolean jjtc001 = true;
        jjtree.openNodeScope(jjtn001);
      }
      try {
/*@egen*/
      (register() "," register() "," register() "," register())/*@bgen(jjtree)*/
      } catch (Throwable jjte001) {
        if (jjtc001) {
          jjtree.clearNodeScope(jjtn001);
          jjtc001 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte001 instanceof RuntimeException) {
          throw (RuntimeException)jjte001;
        }
        if (jjte001 instanceof ParseException) {
          throw (ParseException)jjte001;
        }
        throw (Error)jjte001;
      } finally {
        if (jjtc001) {
          jjtree.closeNodeScope(jjtn001,  4);
        }
      }
/*@egen*/        
    |/*@bgen(jjtree) #mlaS( 4) */
      {
        ASTmlaS jjtn002 = new ASTmlaS(JJTMLAS);
        boolean jjtc002 = true;
        jjtree.openNodeScope(jjtn002);
      }
      try {
/*@egen*/ (<SCND> register() "," register() "," register() "," register())/*@bgen(jjtree)*/
      } catch (Throwable jjte002) {
        if (jjtc002) {
          jjtree.clearNodeScope(jjtn002);
          jjtc002 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte002 instanceof RuntimeException) {
          throw (RuntimeException)jjte002;
        }
        if (jjte002 instanceof ParseException) {
          throw (ParseException)jjte002;
        }
        throw (Error)jjte002;
      } finally {
        if (jjtc002) {
          jjtree.closeNodeScope(jjtn002,  4);
        }
      }
/*@egen*/         
    )

  | cond()
    (/*@bgen(jjtree) #mlaC( 5) */
     {
       ASTmlaC jjtn003 = new ASTmlaC(JJTMLAC);
       boolean jjtc003 = true;
       jjtree.openNodeScope(jjtn003);
     }
     try {
/*@egen*/
     (register() "," register() "," register() "," register())/*@bgen(jjtree)*/
     } catch (Throwable jjte003) {
       if (jjtc003) {
         jjtree.clearNodeScope(jjtn003);
         jjtc003 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte003 instanceof RuntimeException) {
         throw (RuntimeException)jjte003;
       }
       if (jjte003 instanceof ParseException) {
         throw (ParseException)jjte003;
       }
       throw (Error)jjte003;
     } finally {
       if (jjtc003) {
         jjtree.closeNodeScope(jjtn003,  5);
       }
     }
/*@egen*/         
   |/*@bgen(jjtree) #mlaCS( 5) */
     {
       ASTmlaCS jjtn004 = new ASTmlaCS(JJTMLACS);
       boolean jjtc004 = true;
       jjtree.openNodeScope(jjtn004);
     }
     try {
/*@egen*/ (<SCND> register() "," register() "," register() "," register())/*@bgen(jjtree)*/
     } catch (Throwable jjte004) {
       if (jjtc004) {
         jjtree.clearNodeScope(jjtn004);
         jjtc004 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte004 instanceof RuntimeException) {
         throw (RuntimeException)jjte004;
       }
       if (jjte004 instanceof ParseException) {
         throw (ParseException)jjte004;
       }
       throw (Error)jjte004;
     } finally {
       if (jjtc004) {
         jjtree.closeNodeScope(jjtn004,  5);
       }
     }
/*@egen*/            
     )
   )
}

void mul()     :
{}
{
  <MUL>
  (
    (/*@bgen(jjtree) #mul( 3) */
      {
        ASTmul jjtn001 = new ASTmul(JJTMUL);
        boolean jjtc001 = true;
        jjtree.openNodeScope(jjtn001);
      }
      try {
/*@egen*/
      (register() "," register() "," register())/*@bgen(jjtree)*/
      } catch (Throwable jjte001) {
        if (jjtc001) {
          jjtree.clearNodeScope(jjtn001);
          jjtc001 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte001 instanceof RuntimeException) {
          throw (RuntimeException)jjte001;
        }
        if (jjte001 instanceof ParseException) {
          throw (ParseException)jjte001;
        }
        throw (Error)jjte001;
      } finally {
        if (jjtc001) {
          jjtree.closeNodeScope(jjtn001,  3);
        }
      }
/*@egen*/        
    |/*@bgen(jjtree) #mulS( 3) */
      {
        ASTmulS jjtn002 = new ASTmulS(JJTMULS);
        boolean jjtc002 = true;
        jjtree.openNodeScope(jjtn002);
      }
      try {
/*@egen*/ (<SCND> register() "," register() "," register() )/*@bgen(jjtree)*/
      } catch (Throwable jjte002) {
        if (jjtc002) {
          jjtree.clearNodeScope(jjtn002);
          jjtc002 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte002 instanceof RuntimeException) {
          throw (RuntimeException)jjte002;
        }
        if (jjte002 instanceof ParseException) {
          throw (ParseException)jjte002;
        }
        throw (Error)jjte002;
      } finally {
        if (jjtc002) {
          jjtree.closeNodeScope(jjtn002,  3);
        }
      }
/*@egen*/         
    )

  | cond()
    (/*@bgen(jjtree) #mulC( 4) */
     {
       ASTmulC jjtn003 = new ASTmulC(JJTMULC);
       boolean jjtc003 = true;
       jjtree.openNodeScope(jjtn003);
     }
     try {
/*@egen*/
     (register() "," register() "," register())/*@bgen(jjtree)*/
     } catch (Throwable jjte003) {
       if (jjtc003) {
         jjtree.clearNodeScope(jjtn003);
         jjtc003 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte003 instanceof RuntimeException) {
         throw (RuntimeException)jjte003;
       }
       if (jjte003 instanceof ParseException) {
         throw (ParseException)jjte003;
       }
       throw (Error)jjte003;
     } finally {
       if (jjtc003) {
         jjtree.closeNodeScope(jjtn003,  4);
       }
     }
/*@egen*/         
   |/*@bgen(jjtree) #mulCS( 4) */
     {
       ASTmulCS jjtn004 = new ASTmulCS(JJTMULCS);
       boolean jjtc004 = true;
       jjtree.openNodeScope(jjtn004);
     }
     try {
/*@egen*/ (<SCND> register() "," register() "," register())/*@bgen(jjtree)*/
     } catch (Throwable jjte004) {
       if (jjtc004) {
         jjtree.clearNodeScope(jjtn004);
         jjtc004 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte004 instanceof RuntimeException) {
         throw (RuntimeException)jjte004;
       }
       if (jjte004 instanceof ParseException) {
         throw (ParseException)jjte004;
       }
       throw (Error)jjte004;
     } finally {
       if (jjtc004) {
         jjtree.closeNodeScope(jjtn004,  4);
       }
     }
/*@egen*/            
     )
   )
}


void smlal()     :
{}
{
  <SMLAL>
  (
    (/*@bgen(jjtree) #smlal( 4) */
      {
        ASTsmlal jjtn001 = new ASTsmlal(JJTSMLAL);
        boolean jjtc001 = true;
        jjtree.openNodeScope(jjtn001);
      }
      try {
/*@egen*/
      (register() "," register() "," register() "," register())/*@bgen(jjtree)*/
      } catch (Throwable jjte001) {
        if (jjtc001) {
          jjtree.clearNodeScope(jjtn001);
          jjtc001 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte001 instanceof RuntimeException) {
          throw (RuntimeException)jjte001;
        }
        if (jjte001 instanceof ParseException) {
          throw (ParseException)jjte001;
        }
        throw (Error)jjte001;
      } finally {
        if (jjtc001) {
          jjtree.closeNodeScope(jjtn001,  4);
        }
      }
/*@egen*/          
    |/*@bgen(jjtree) #smlalS( 4) */
      {
        ASTsmlalS jjtn002 = new ASTsmlalS(JJTSMLALS);
        boolean jjtc002 = true;
        jjtree.openNodeScope(jjtn002);
      }
      try {
/*@egen*/ (<SCND> register() "," register() "," register() "," register())/*@bgen(jjtree)*/
      } catch (Throwable jjte002) {
        if (jjtc002) {
          jjtree.clearNodeScope(jjtn002);
          jjtc002 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte002 instanceof RuntimeException) {
          throw (RuntimeException)jjte002;
        }
        if (jjte002 instanceof ParseException) {
          throw (ParseException)jjte002;
        }
        throw (Error)jjte002;
      } finally {
        if (jjtc002) {
          jjtree.closeNodeScope(jjtn002,  4);
        }
      }
/*@egen*/           
    )

  | cond()
    (/*@bgen(jjtree) #smlalC( 5) */
     {
       ASTsmlalC jjtn003 = new ASTsmlalC(JJTSMLALC);
       boolean jjtc003 = true;
       jjtree.openNodeScope(jjtn003);
     }
     try {
/*@egen*/
     (register() "," register() "," register() "," register())/*@bgen(jjtree)*/
     } catch (Throwable jjte003) {
       if (jjtc003) {
         jjtree.clearNodeScope(jjtn003);
         jjtc003 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte003 instanceof RuntimeException) {
         throw (RuntimeException)jjte003;
       }
       if (jjte003 instanceof ParseException) {
         throw (ParseException)jjte003;
       }
       throw (Error)jjte003;
     } finally {
       if (jjtc003) {
         jjtree.closeNodeScope(jjtn003,  5);
       }
     }
/*@egen*/           
   |/*@bgen(jjtree) #smlalCS( 5) */
     {
       ASTsmlalCS jjtn004 = new ASTsmlalCS(JJTSMLALCS);
       boolean jjtc004 = true;
       jjtree.openNodeScope(jjtn004);
     }
     try {
/*@egen*/ (<SCND> register() "," register() "," register() "," register())/*@bgen(jjtree)*/
     } catch (Throwable jjte004) {
       if (jjtc004) {
         jjtree.clearNodeScope(jjtn004);
         jjtc004 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte004 instanceof RuntimeException) {
         throw (RuntimeException)jjte004;
       }
       if (jjte004 instanceof ParseException) {
         throw (ParseException)jjte004;
       }
       throw (Error)jjte004;
     } finally {
       if (jjtc004) {
         jjtree.closeNodeScope(jjtn004,  5);
       }
     }
/*@egen*/              
     )
   )
}

void smull()     :
{}
{
  <SMULL>
  (
    (/*@bgen(jjtree) #smull( 4) */
      {
        ASTsmull jjtn001 = new ASTsmull(JJTSMULL);
        boolean jjtc001 = true;
        jjtree.openNodeScope(jjtn001);
      }
      try {
/*@egen*/
      (register() "," register() "," register() "," register())/*@bgen(jjtree)*/
      } catch (Throwable jjte001) {
        if (jjtc001) {
          jjtree.clearNodeScope(jjtn001);
          jjtc001 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte001 instanceof RuntimeException) {
          throw (RuntimeException)jjte001;
        }
        if (jjte001 instanceof ParseException) {
          throw (ParseException)jjte001;
        }
        throw (Error)jjte001;
      } finally {
        if (jjtc001) {
          jjtree.closeNodeScope(jjtn001,  4);
        }
      }
/*@egen*/          
    |/*@bgen(jjtree) #smullS( 4) */
      {
        ASTsmullS jjtn002 = new ASTsmullS(JJTSMULLS);
        boolean jjtc002 = true;
        jjtree.openNodeScope(jjtn002);
      }
      try {
/*@egen*/ (<SCND> register() "," register() "," register() "," register())/*@bgen(jjtree)*/
      } catch (Throwable jjte002) {
        if (jjtc002) {
          jjtree.clearNodeScope(jjtn002);
          jjtc002 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte002 instanceof RuntimeException) {
          throw (RuntimeException)jjte002;
        }
        if (jjte002 instanceof ParseException) {
          throw (ParseException)jjte002;
        }
        throw (Error)jjte002;
      } finally {
        if (jjtc002) {
          jjtree.closeNodeScope(jjtn002,  4);
        }
      }
/*@egen*/           
    )

  | cond()
    (/*@bgen(jjtree) #smullC( 5) */
     {
       ASTsmullC jjtn003 = new ASTsmullC(JJTSMULLC);
       boolean jjtc003 = true;
       jjtree.openNodeScope(jjtn003);
     }
     try {
/*@egen*/
     (register() "," register() "," register() "," register())/*@bgen(jjtree)*/
     } catch (Throwable jjte003) {
       if (jjtc003) {
         jjtree.clearNodeScope(jjtn003);
         jjtc003 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte003 instanceof RuntimeException) {
         throw (RuntimeException)jjte003;
       }
       if (jjte003 instanceof ParseException) {
         throw (ParseException)jjte003;
       }
       throw (Error)jjte003;
     } finally {
       if (jjtc003) {
         jjtree.closeNodeScope(jjtn003,  5);
       }
     }
/*@egen*/           
   |/*@bgen(jjtree) #smullCS( 5) */
     {
       ASTsmullCS jjtn004 = new ASTsmullCS(JJTSMULLCS);
       boolean jjtc004 = true;
       jjtree.openNodeScope(jjtn004);
     }
     try {
/*@egen*/ (<SCND> register() "," register() "," register() "," register())/*@bgen(jjtree)*/
     } catch (Throwable jjte004) {
       if (jjtc004) {
         jjtree.clearNodeScope(jjtn004);
         jjtc004 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte004 instanceof RuntimeException) {
         throw (RuntimeException)jjte004;
       }
       if (jjte004 instanceof ParseException) {
         throw (ParseException)jjte004;
       }
       throw (Error)jjte004;
     } finally {
       if (jjtc004) {
         jjtree.closeNodeScope(jjtn004,  5);
       }
     }
/*@egen*/              
     )
   )
}

void umlal()     :
{}
{
  <UMLAL>
  (
    (/*@bgen(jjtree) #umlal( 4) */
      {
        ASTumlal jjtn001 = new ASTumlal(JJTUMLAL);
        boolean jjtc001 = true;
        jjtree.openNodeScope(jjtn001);
      }
      try {
/*@egen*/
      (register() "," register() "," register() "," register())/*@bgen(jjtree)*/
      } catch (Throwable jjte001) {
        if (jjtc001) {
          jjtree.clearNodeScope(jjtn001);
          jjtc001 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte001 instanceof RuntimeException) {
          throw (RuntimeException)jjte001;
        }
        if (jjte001 instanceof ParseException) {
          throw (ParseException)jjte001;
        }
        throw (Error)jjte001;
      } finally {
        if (jjtc001) {
          jjtree.closeNodeScope(jjtn001,  4);
        }
      }
/*@egen*/          
    |/*@bgen(jjtree) #umlalS( 4) */
      {
        ASTumlalS jjtn002 = new ASTumlalS(JJTUMLALS);
        boolean jjtc002 = true;
        jjtree.openNodeScope(jjtn002);
      }
      try {
/*@egen*/ (<SCND> register() "," register() "," register() "," register())/*@bgen(jjtree)*/
      } catch (Throwable jjte002) {
        if (jjtc002) {
          jjtree.clearNodeScope(jjtn002);
          jjtc002 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte002 instanceof RuntimeException) {
          throw (RuntimeException)jjte002;
        }
        if (jjte002 instanceof ParseException) {
          throw (ParseException)jjte002;
        }
        throw (Error)jjte002;
      } finally {
        if (jjtc002) {
          jjtree.closeNodeScope(jjtn002,  4);
        }
      }
/*@egen*/           
    )

  | cond()
    (/*@bgen(jjtree) #umlalC( 5) */
     {
       ASTumlalC jjtn003 = new ASTumlalC(JJTUMLALC);
       boolean jjtc003 = true;
       jjtree.openNodeScope(jjtn003);
     }
     try {
/*@egen*/
     (register() "," register() "," register() "," register())/*@bgen(jjtree)*/
     } catch (Throwable jjte003) {
       if (jjtc003) {
         jjtree.clearNodeScope(jjtn003);
         jjtc003 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte003 instanceof RuntimeException) {
         throw (RuntimeException)jjte003;
       }
       if (jjte003 instanceof ParseException) {
         throw (ParseException)jjte003;
       }
       throw (Error)jjte003;
     } finally {
       if (jjtc003) {
         jjtree.closeNodeScope(jjtn003,  5);
       }
     }
/*@egen*/           
   |/*@bgen(jjtree) #umlalCS( 5) */
     {
       ASTumlalCS jjtn004 = new ASTumlalCS(JJTUMLALCS);
       boolean jjtc004 = true;
       jjtree.openNodeScope(jjtn004);
     }
     try {
/*@egen*/ (<SCND> register() "," register() "," register() "," register())/*@bgen(jjtree)*/
     } catch (Throwable jjte004) {
       if (jjtc004) {
         jjtree.clearNodeScope(jjtn004);
         jjtc004 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte004 instanceof RuntimeException) {
         throw (RuntimeException)jjte004;
       }
       if (jjte004 instanceof ParseException) {
         throw (ParseException)jjte004;
       }
       throw (Error)jjte004;
     } finally {
       if (jjtc004) {
         jjtree.closeNodeScope(jjtn004,  5);
       }
     }
/*@egen*/              
     )
   )
}

void umull()     :
{}
{
  <UMULL>
  (
    (/*@bgen(jjtree) #umull( 4) */
      {
        ASTumull jjtn001 = new ASTumull(JJTUMULL);
        boolean jjtc001 = true;
        jjtree.openNodeScope(jjtn001);
      }
      try {
/*@egen*/
      (register() "," register() "," register() "," register())/*@bgen(jjtree)*/
      } catch (Throwable jjte001) {
        if (jjtc001) {
          jjtree.clearNodeScope(jjtn001);
          jjtc001 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte001 instanceof RuntimeException) {
          throw (RuntimeException)jjte001;
        }
        if (jjte001 instanceof ParseException) {
          throw (ParseException)jjte001;
        }
        throw (Error)jjte001;
      } finally {
        if (jjtc001) {
          jjtree.closeNodeScope(jjtn001,  4);
        }
      }
/*@egen*/          
    |/*@bgen(jjtree) #umullS( 4) */
      {
        ASTumullS jjtn002 = new ASTumullS(JJTUMULLS);
        boolean jjtc002 = true;
        jjtree.openNodeScope(jjtn002);
      }
      try {
/*@egen*/ (<SCND> register() "," register() "," register() "," register())/*@bgen(jjtree)*/
      } catch (Throwable jjte002) {
        if (jjtc002) {
          jjtree.clearNodeScope(jjtn002);
          jjtc002 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte002 instanceof RuntimeException) {
          throw (RuntimeException)jjte002;
        }
        if (jjte002 instanceof ParseException) {
          throw (ParseException)jjte002;
        }
        throw (Error)jjte002;
      } finally {
        if (jjtc002) {
          jjtree.closeNodeScope(jjtn002,  4);
        }
      }
/*@egen*/           
    )

  | cond()
    (/*@bgen(jjtree) #umullC( 5) */
     {
       ASTumullC jjtn003 = new ASTumullC(JJTUMULLC);
       boolean jjtc003 = true;
       jjtree.openNodeScope(jjtn003);
     }
     try {
/*@egen*/
     (register() "," register() "," register() "," register())/*@bgen(jjtree)*/
     } catch (Throwable jjte003) {
       if (jjtc003) {
         jjtree.clearNodeScope(jjtn003);
         jjtc003 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte003 instanceof RuntimeException) {
         throw (RuntimeException)jjte003;
       }
       if (jjte003 instanceof ParseException) {
         throw (ParseException)jjte003;
       }
       throw (Error)jjte003;
     } finally {
       if (jjtc003) {
         jjtree.closeNodeScope(jjtn003,  5);
       }
     }
/*@egen*/           
   |/*@bgen(jjtree) #umullCS( 5) */
     {
       ASTumullCS jjtn004 = new ASTumullCS(JJTUMULLCS);
       boolean jjtc004 = true;
       jjtree.openNodeScope(jjtn004);
     }
     try {
/*@egen*/ (<SCND> register() "," register() "," register() "," register())/*@bgen(jjtree)*/
     } catch (Throwable jjte004) {
       if (jjtc004) {
         jjtree.clearNodeScope(jjtn004);
         jjtc004 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte004 instanceof RuntimeException) {
         throw (RuntimeException)jjte004;
       }
       if (jjte004 instanceof ParseException) {
         throw (ParseException)jjte004;
       }
       throw (Error)jjte004;
     } finally {
       if (jjtc004) {
         jjtree.closeNodeScope(jjtn004,  5);
       }
     }
/*@egen*/              
     )
   )
}

void cmp()     :
{}
{
  <CMP>
  (/*@bgen(jjtree) #cmp( 2) */
    {
      ASTcmp jjtn001 = new ASTcmp(JJTCMP);
      boolean jjtc001 = true;
      jjtree.openNodeScope(jjtn001);
    }
    try {
/*@egen*/
    (register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
    } catch (Throwable jjte001) {
      if (jjtc001) {
        jjtree.clearNodeScope(jjtn001);
        jjtc001 = false;
      } else {
        jjtree.popNode();
      }
      if (jjte001 instanceof RuntimeException) {
        throw (RuntimeException)jjte001;
      }
      if (jjte001 instanceof ParseException) {
        throw (ParseException)jjte001;
      }
      throw (Error)jjte001;
    } finally {
      if (jjtc001) {
        jjtree.closeNodeScope(jjtn001,  2);
      }
    }
/*@egen*/        
  |/*@bgen(jjtree) #cmpC( 3) */
    {
      ASTcmpC jjtn002 = new ASTcmpC(JJTCMPC);
      boolean jjtc002 = true;
      jjtree.openNodeScope(jjtn002);
    }
    try {
/*@egen*/ (cond() register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
    } catch (Throwable jjte002) {
      if (jjtc002) {
        jjtree.clearNodeScope(jjtn002);
        jjtc002 = false;
      } else {
        jjtree.popNode();
      }
      if (jjte002 instanceof RuntimeException) {
        throw (RuntimeException)jjte002;
      }
      if (jjte002 instanceof ParseException) {
        throw (ParseException)jjte002;
      }
      throw (Error)jjte002;
    } finally {
      if (jjtc002) {
        jjtree.closeNodeScope(jjtn002,  3);
      }
    }
/*@egen*/           )
}

void cmn()     :
{}
{
  <CMN>
  (/*@bgen(jjtree) #cmn( 2) */
    {
      ASTcmn jjtn001 = new ASTcmn(JJTCMN);
      boolean jjtc001 = true;
      jjtree.openNodeScope(jjtn001);
    }
    try {
/*@egen*/
    (register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
    } catch (Throwable jjte001) {
      if (jjtc001) {
        jjtree.clearNodeScope(jjtn001);
        jjtc001 = false;
      } else {
        jjtree.popNode();
      }
      if (jjte001 instanceof RuntimeException) {
        throw (RuntimeException)jjte001;
      }
      if (jjte001 instanceof ParseException) {
        throw (ParseException)jjte001;
      }
      throw (Error)jjte001;
    } finally {
      if (jjtc001) {
        jjtree.closeNodeScope(jjtn001,  2);
      }
    }
/*@egen*/        
  |/*@bgen(jjtree) #cmnC( 3) */
    {
      ASTcmnC jjtn002 = new ASTcmnC(JJTCMNC);
      boolean jjtc002 = true;
      jjtree.openNodeScope(jjtn002);
    }
    try {
/*@egen*/ (cond() register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
    } catch (Throwable jjte002) {
      if (jjtc002) {
        jjtree.clearNodeScope(jjtn002);
        jjtc002 = false;
      } else {
        jjtree.popNode();
      }
      if (jjte002 instanceof RuntimeException) {
        throw (RuntimeException)jjte002;
      }
      if (jjte002 instanceof ParseException) {
        throw (ParseException)jjte002;
      }
      throw (Error)jjte002;
    } finally {
      if (jjtc002) {
        jjtree.closeNodeScope(jjtn002,  3);
      }
    }
/*@egen*/         
  )
}

void teq()     :
{}
{
  <TEQ>
  (/*@bgen(jjtree) #teq( 2) */
    {
      ASTteq jjtn001 = new ASTteq(JJTTEQ);
      boolean jjtc001 = true;
      jjtree.openNodeScope(jjtn001);
    }
    try {
/*@egen*/
    (register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
    } catch (Throwable jjte001) {
      if (jjtc001) {
        jjtree.clearNodeScope(jjtn001);
        jjtc001 = false;
      } else {
        jjtree.popNode();
      }
      if (jjte001 instanceof RuntimeException) {
        throw (RuntimeException)jjte001;
      }
      if (jjte001 instanceof ParseException) {
        throw (ParseException)jjte001;
      }
      throw (Error)jjte001;
    } finally {
      if (jjtc001) {
        jjtree.closeNodeScope(jjtn001,  2);
      }
    }
/*@egen*/        
  |/*@bgen(jjtree) #teqC( 3) */
    {
      ASTteqC jjtn002 = new ASTteqC(JJTTEQC);
      boolean jjtc002 = true;
      jjtree.openNodeScope(jjtn002);
    }
    try {
/*@egen*/ (cond() register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
    } catch (Throwable jjte002) {
      if (jjtc002) {
        jjtree.clearNodeScope(jjtn002);
        jjtc002 = false;
      } else {
        jjtree.popNode();
      }
      if (jjte002 instanceof RuntimeException) {
        throw (RuntimeException)jjte002;
      }
      if (jjte002 instanceof ParseException) {
        throw (ParseException)jjte002;
      }
      throw (Error)jjte002;
    } finally {
      if (jjtc002) {
        jjtree.closeNodeScope(jjtn002,  3);
      }
    }
/*@egen*/         
  )
}

void tst()     :
{}
{
  <TST>
  (/*@bgen(jjtree) #tst( 2) */
    {
      ASTtst jjtn001 = new ASTtst(JJTTST);
      boolean jjtc001 = true;
      jjtree.openNodeScope(jjtn001);
    }
    try {
/*@egen*/
    (register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
    } catch (Throwable jjte001) {
      if (jjtc001) {
        jjtree.clearNodeScope(jjtn001);
        jjtc001 = false;
      } else {
        jjtree.popNode();
      }
      if (jjte001 instanceof RuntimeException) {
        throw (RuntimeException)jjte001;
      }
      if (jjte001 instanceof ParseException) {
        throw (ParseException)jjte001;
      }
      throw (Error)jjte001;
    } finally {
      if (jjtc001) {
        jjtree.closeNodeScope(jjtn001,  2);
      }
    }
/*@egen*/        
  |/*@bgen(jjtree) #tstC( 3) */
    {
      ASTtstC jjtn002 = new ASTtstC(JJTTSTC);
      boolean jjtc002 = true;
      jjtree.openNodeScope(jjtn002);
    }
    try {
/*@egen*/ (cond() register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
    } catch (Throwable jjte002) {
      if (jjtc002) {
        jjtree.clearNodeScope(jjtn002);
        jjtc002 = false;
      } else {
        jjtree.popNode();
      }
      if (jjte002 instanceof RuntimeException) {
        throw (RuntimeException)jjte002;
      }
      if (jjte002 instanceof ParseException) {
        throw (ParseException)jjte002;
      }
      throw (Error)jjte002;
    } finally {
      if (jjtc002) {
        jjtree.closeNodeScope(jjtn002,  3);
      }
    }
/*@egen*/         
  )
}

void and()      :
{}
{
  <AND>
  (
    (/*@bgen(jjtree) #and( 3) */
      {
        ASTand jjtn001 = new ASTand(JJTAND);
        boolean jjtc001 = true;
        jjtree.openNodeScope(jjtn001);
      }
      try {
/*@egen*/
      (register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
      } catch (Throwable jjte001) {
        if (jjtc001) {
          jjtree.clearNodeScope(jjtn001);
          jjtc001 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte001 instanceof RuntimeException) {
          throw (RuntimeException)jjte001;
        }
        if (jjte001 instanceof ParseException) {
          throw (ParseException)jjte001;
        }
        throw (Error)jjte001;
      } finally {
        if (jjtc001) {
          jjtree.closeNodeScope(jjtn001,  3);
        }
      }
/*@egen*/        
    |/*@bgen(jjtree) #andS( 3) */
      {
        ASTandS jjtn002 = new ASTandS(JJTANDS);
        boolean jjtc002 = true;
        jjtree.openNodeScope(jjtn002);
      }
      try {
/*@egen*/ (<SCND> register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
      } catch (Throwable jjte002) {
        if (jjtc002) {
          jjtree.clearNodeScope(jjtn002);
          jjtc002 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte002 instanceof RuntimeException) {
          throw (RuntimeException)jjte002;
        }
        if (jjte002 instanceof ParseException) {
          throw (ParseException)jjte002;
        }
        throw (Error)jjte002;
      } finally {
        if (jjtc002) {
          jjtree.closeNodeScope(jjtn002,  3);
        }
      }
/*@egen*/         
    )

  | cond()
    (/*@bgen(jjtree) #andC( 4) */
     {
       ASTandC jjtn003 = new ASTandC(JJTANDC);
       boolean jjtc003 = true;
       jjtree.openNodeScope(jjtn003);
     }
     try {
/*@egen*/
     (register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
     } catch (Throwable jjte003) {
       if (jjtc003) {
         jjtree.clearNodeScope(jjtn003);
         jjtc003 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte003 instanceof RuntimeException) {
         throw (RuntimeException)jjte003;
       }
       if (jjte003 instanceof ParseException) {
         throw (ParseException)jjte003;
       }
       throw (Error)jjte003;
     } finally {
       if (jjtc003) {
         jjtree.closeNodeScope(jjtn003,  4);
       }
     }
/*@egen*/         
   |/*@bgen(jjtree) #andCS( 4) */
     {
       ASTandCS jjtn004 = new ASTandCS(JJTANDCS);
       boolean jjtc004 = true;
       jjtree.openNodeScope(jjtn004);
     }
     try {
/*@egen*/ (<SCND> register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
     } catch (Throwable jjte004) {
       if (jjtc004) {
         jjtree.clearNodeScope(jjtn004);
         jjtc004 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte004 instanceof RuntimeException) {
         throw (RuntimeException)jjte004;
       }
       if (jjte004 instanceof ParseException) {
         throw (ParseException)jjte004;
       }
       throw (Error)jjte004;
     } finally {
       if (jjtc004) {
         jjtree.closeNodeScope(jjtn004,  4);
       }
     }
/*@egen*/            
     )
   )
}

void bic()      :
{}
{
  <BIC>
  (
    (/*@bgen(jjtree) #bic( 3) */
      {
        ASTbic jjtn001 = new ASTbic(JJTBIC);
        boolean jjtc001 = true;
        jjtree.openNodeScope(jjtn001);
      }
      try {
/*@egen*/
      (register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
      } catch (Throwable jjte001) {
        if (jjtc001) {
          jjtree.clearNodeScope(jjtn001);
          jjtc001 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte001 instanceof RuntimeException) {
          throw (RuntimeException)jjte001;
        }
        if (jjte001 instanceof ParseException) {
          throw (ParseException)jjte001;
        }
        throw (Error)jjte001;
      } finally {
        if (jjtc001) {
          jjtree.closeNodeScope(jjtn001,  3);
        }
      }
/*@egen*/        
    |/*@bgen(jjtree) #bicS( 3) */
      {
        ASTbicS jjtn002 = new ASTbicS(JJTBICS);
        boolean jjtc002 = true;
        jjtree.openNodeScope(jjtn002);
      }
      try {
/*@egen*/ (<SCND> register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
      } catch (Throwable jjte002) {
        if (jjtc002) {
          jjtree.clearNodeScope(jjtn002);
          jjtc002 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte002 instanceof RuntimeException) {
          throw (RuntimeException)jjte002;
        }
        if (jjte002 instanceof ParseException) {
          throw (ParseException)jjte002;
        }
        throw (Error)jjte002;
      } finally {
        if (jjtc002) {
          jjtree.closeNodeScope(jjtn002,  3);
        }
      }
/*@egen*/         
    )

  | cond()
    (/*@bgen(jjtree) #bicC( 4) */
     {
       ASTbicC jjtn003 = new ASTbicC(JJTBICC);
       boolean jjtc003 = true;
       jjtree.openNodeScope(jjtn003);
     }
     try {
/*@egen*/
     (register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
     } catch (Throwable jjte003) {
       if (jjtc003) {
         jjtree.clearNodeScope(jjtn003);
         jjtc003 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte003 instanceof RuntimeException) {
         throw (RuntimeException)jjte003;
       }
       if (jjte003 instanceof ParseException) {
         throw (ParseException)jjte003;
       }
       throw (Error)jjte003;
     } finally {
       if (jjtc003) {
         jjtree.closeNodeScope(jjtn003,  4);
       }
     }
/*@egen*/         
   |/*@bgen(jjtree) #bicCS( 4) */
     {
       ASTbicCS jjtn004 = new ASTbicCS(JJTBICCS);
       boolean jjtc004 = true;
       jjtree.openNodeScope(jjtn004);
     }
     try {
/*@egen*/ (<SCND> register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
     } catch (Throwable jjte004) {
       if (jjtc004) {
         jjtree.clearNodeScope(jjtn004);
         jjtc004 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte004 instanceof RuntimeException) {
         throw (RuntimeException)jjte004;
       }
       if (jjte004 instanceof ParseException) {
         throw (ParseException)jjte004;
       }
       throw (Error)jjte004;
     } finally {
       if (jjtc004) {
         jjtree.closeNodeScope(jjtn004,  4);
       }
     }
/*@egen*/            
     )
   )
}

void eor()      :
{}
{
  <EOR>
  (
    (/*@bgen(jjtree) #eor( 3) */
      {
        ASTeor jjtn001 = new ASTeor(JJTEOR);
        boolean jjtc001 = true;
        jjtree.openNodeScope(jjtn001);
      }
      try {
/*@egen*/
      (register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
      } catch (Throwable jjte001) {
        if (jjtc001) {
          jjtree.clearNodeScope(jjtn001);
          jjtc001 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte001 instanceof RuntimeException) {
          throw (RuntimeException)jjte001;
        }
        if (jjte001 instanceof ParseException) {
          throw (ParseException)jjte001;
        }
        throw (Error)jjte001;
      } finally {
        if (jjtc001) {
          jjtree.closeNodeScope(jjtn001,  3);
        }
      }
/*@egen*/        
    |/*@bgen(jjtree) #eorS( 3) */
      {
        ASTeorS jjtn002 = new ASTeorS(JJTEORS);
        boolean jjtc002 = true;
        jjtree.openNodeScope(jjtn002);
      }
      try {
/*@egen*/ (<SCND> register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
      } catch (Throwable jjte002) {
        if (jjtc002) {
          jjtree.clearNodeScope(jjtn002);
          jjtc002 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte002 instanceof RuntimeException) {
          throw (RuntimeException)jjte002;
        }
        if (jjte002 instanceof ParseException) {
          throw (ParseException)jjte002;
        }
        throw (Error)jjte002;
      } finally {
        if (jjtc002) {
          jjtree.closeNodeScope(jjtn002,  3);
        }
      }
/*@egen*/         
    )

  | cond()
    (/*@bgen(jjtree) #eorC( 4) */
     {
       ASTeorC jjtn003 = new ASTeorC(JJTEORC);
       boolean jjtc003 = true;
       jjtree.openNodeScope(jjtn003);
     }
     try {
/*@egen*/
     (register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
     } catch (Throwable jjte003) {
       if (jjtc003) {
         jjtree.clearNodeScope(jjtn003);
         jjtc003 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte003 instanceof RuntimeException) {
         throw (RuntimeException)jjte003;
       }
       if (jjte003 instanceof ParseException) {
         throw (ParseException)jjte003;
       }
       throw (Error)jjte003;
     } finally {
       if (jjtc003) {
         jjtree.closeNodeScope(jjtn003,  4);
       }
     }
/*@egen*/         
   |/*@bgen(jjtree) #eorCS( 4) */
     {
       ASTeorCS jjtn004 = new ASTeorCS(JJTEORCS);
       boolean jjtc004 = true;
       jjtree.openNodeScope(jjtn004);
     }
     try {
/*@egen*/ (<SCND> register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
     } catch (Throwable jjte004) {
       if (jjtc004) {
         jjtree.clearNodeScope(jjtn004);
         jjtc004 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte004 instanceof RuntimeException) {
         throw (RuntimeException)jjte004;
       }
       if (jjte004 instanceof ParseException) {
         throw (ParseException)jjte004;
       }
       throw (Error)jjte004;
     } finally {
       if (jjtc004) {
         jjtree.closeNodeScope(jjtn004,  4);
       }
     }
/*@egen*/            
     )
   )
}

void orr()      :
{}
{
  <ORR>
  (
    (/*@bgen(jjtree) #orr( 3) */
      {
        ASTorr jjtn001 = new ASTorr(JJTORR);
        boolean jjtc001 = true;
        jjtree.openNodeScope(jjtn001);
      }
      try {
/*@egen*/
      (register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
      } catch (Throwable jjte001) {
        if (jjtc001) {
          jjtree.clearNodeScope(jjtn001);
          jjtc001 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte001 instanceof RuntimeException) {
          throw (RuntimeException)jjte001;
        }
        if (jjte001 instanceof ParseException) {
          throw (ParseException)jjte001;
        }
        throw (Error)jjte001;
      } finally {
        if (jjtc001) {
          jjtree.closeNodeScope(jjtn001,  3);
        }
      }
/*@egen*/        
    |/*@bgen(jjtree) #orrS( 3) */
      {
        ASTorrS jjtn002 = new ASTorrS(JJTORRS);
        boolean jjtc002 = true;
        jjtree.openNodeScope(jjtn002);
      }
      try {
/*@egen*/ (<SCND> register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
      } catch (Throwable jjte002) {
        if (jjtc002) {
          jjtree.clearNodeScope(jjtn002);
          jjtc002 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte002 instanceof RuntimeException) {
          throw (RuntimeException)jjte002;
        }
        if (jjte002 instanceof ParseException) {
          throw (ParseException)jjte002;
        }
        throw (Error)jjte002;
      } finally {
        if (jjtc002) {
          jjtree.closeNodeScope(jjtn002,  3);
        }
      }
/*@egen*/         
    )

  | cond()
    (/*@bgen(jjtree) #orrC( 4) */
     {
       ASTorrC jjtn003 = new ASTorrC(JJTORRC);
       boolean jjtc003 = true;
       jjtree.openNodeScope(jjtn003);
     }
     try {
/*@egen*/
     (register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
     } catch (Throwable jjte003) {
       if (jjtc003) {
         jjtree.clearNodeScope(jjtn003);
         jjtc003 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte003 instanceof RuntimeException) {
         throw (RuntimeException)jjte003;
       }
       if (jjte003 instanceof ParseException) {
         throw (ParseException)jjte003;
       }
       throw (Error)jjte003;
     } finally {
       if (jjtc003) {
         jjtree.closeNodeScope(jjtn003,  4);
       }
     }
/*@egen*/         
   |/*@bgen(jjtree) #orrCS( 4) */
     {
       ASTorrCS jjtn004 = new ASTorrCS(JJTORRCS);
       boolean jjtc004 = true;
       jjtree.openNodeScope(jjtn004);
     }
     try {
/*@egen*/ (<SCND> register() "," register() "," (hexa()| numOrNumShift() | regOrRegShift() ))/*@bgen(jjtree)*/
     } catch (Throwable jjte004) {
       if (jjtc004) {
         jjtree.clearNodeScope(jjtn004);
         jjtc004 = false;
       } else {
         jjtree.popNode();
       }
       if (jjte004 instanceof RuntimeException) {
         throw (RuntimeException)jjte004;
       }
       if (jjte004 instanceof ParseException) {
         throw (ParseException)jjte004;
       }
       throw (Error)jjte004;
     } finally {
       if (jjtc004) {
         jjtree.closeNodeScope(jjtn004,  4);
       }
     }
/*@egen*/            
     )
   )
}

void ldr()      :
{}
{
  < LDR >
(
(    
  (
    register() "," "[" register()
    (
     ","
      (/*@bgen(jjtree) #ldrPreNeg( 4) */
        {
          ASTldrPreNeg jjtn001 = new ASTldrPreNeg(JJTLDRPRENEG);
          boolean jjtc001 = true;
          jjtree.openNodeScope(jjtn001);
        }
        try {
/*@egen*/ 
        ("-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) closeOrCAUp())/*@bgen(jjtree)*/
        } catch (Throwable jjte001) {
          if (jjtc001) {
            jjtree.clearNodeScope(jjtn001);
            jjtc001 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte001 instanceof RuntimeException) {
            throw (RuntimeException)jjte001;
          }
          if (jjte001 instanceof ParseException) {
            throw (ParseException)jjte001;
          }
          throw (Error)jjte001;
        } finally {
          if (jjtc001) {
            jjtree.closeNodeScope(jjtn001,  4);
          }
        }
/*@egen*/               
      |/*@bgen(jjtree) #ldrPrePos( 4) */
        {
          ASTldrPrePos jjtn002 = new ASTldrPrePos(JJTLDRPREPOS);
          boolean jjtc002 = true;
          jjtree.openNodeScope(jjtn002);
        }
        try {
/*@egen*/ ( ( LOOKAHEAD(3) (num_shift() | reg_shift()) | (register() | (number())) ) closeOrCAUp() )/*@bgen(jjtree)*/
        } catch (Throwable jjte002) {
          if (jjtc002) {
            jjtree.clearNodeScope(jjtn002);
            jjtc002 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte002 instanceof RuntimeException) {
            throw (RuntimeException)jjte002;
          }
          if (jjte002 instanceof ParseException) {
            throw (ParseException)jjte002;
          }
          throw (Error)jjte002;
        } finally {
          if (jjtc002) {
            jjtree.closeNodeScope(jjtn002,  4);
          }
        }
/*@egen*/               
      )
   | ( 
        LOOKAHEAD(2)  
        "]" ","
        (/*@bgen(jjtree) #ldrPostNeg( 3) */
         {
           ASTldrPostNeg jjtn003 = new ASTldrPostNeg(JJTLDRPOSTNEG);
           boolean jjtc003 = true;
           jjtree.openNodeScope(jjtn003);
         }
         try {
/*@egen*/
         ( "-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) )/*@bgen(jjtree)*/
         } catch (Throwable jjte003) {
           if (jjtc003) {
             jjtree.clearNodeScope(jjtn003);
             jjtc003 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte003 instanceof RuntimeException) {
             throw (RuntimeException)jjte003;
           }
           if (jjte003 instanceof ParseException) {
             throw (ParseException)jjte003;
           }
           throw (Error)jjte003;
         } finally {
           if (jjtc003) {
             jjtree.closeNodeScope(jjtn003,  3);
           }
         }
/*@egen*/               
       |/*@bgen(jjtree) #ldrPostPos( 3) */
         {
           ASTldrPostPos jjtn004 = new ASTldrPostPos(JJTLDRPOSTPOS);
           boolean jjtc004 = true;
           jjtree.openNodeScope(jjtn004);
         }
         try {
/*@egen*/ ( LOOKAHEAD(3)   (num_shift() | reg_shift()) | (register()) | (number()) )/*@bgen(jjtree)*/
         } catch (Throwable jjte004) {
           if (jjtc004) {
             jjtree.clearNodeScope(jjtn004);
             jjtc004 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte004 instanceof RuntimeException) {
             throw (RuntimeException)jjte004;
           }
           if (jjte004 instanceof ParseException) {
             throw (ParseException)jjte004;
           }
           throw (Error)jjte004;
         } finally {
           if (jjtc004) {
             jjtree.closeNodeScope(jjtn004,  3);
           }
         }
/*@egen*/               
        )
        |/*@bgen(jjtree) #ldrSimple( 3) */
          {
            ASTldrSimple jjtn005 = new ASTldrSimple(JJTLDRSIMPLE);
            boolean jjtc005 = true;
            jjtree.openNodeScope(jjtn005);
          }
          try {
/*@egen*/ closeOrCAUp()/*@bgen(jjtree)*/
          } catch (Throwable jjte005) {
            if (jjtc005) {
              jjtree.clearNodeScope(jjtn005);
              jjtc005 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte005 instanceof RuntimeException) {
              throw (RuntimeException)jjte005;
            }
            if (jjte005 instanceof ParseException) {
              throw (ParseException)jjte005;
            }
            throw (Error)jjte005;
          } finally {
            if (jjtc005) {
              jjtree.closeNodeScope(jjtn005,  3);
            }
          }
/*@egen*/              
     )    )
  )

 | < B >
  (
     register() "," "[" register()
    (
     ","
      (/*@bgen(jjtree) #ldrBPreNeg( 4) */
        {
          ASTldrBPreNeg jjtn006 = new ASTldrBPreNeg(JJTLDRBPRENEG);
          boolean jjtc006 = true;
          jjtree.openNodeScope(jjtn006);
        }
        try {
/*@egen*/ 
        ("-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) closeOrCAUp())/*@bgen(jjtree)*/
        } catch (Throwable jjte006) {
          if (jjtc006) {
            jjtree.clearNodeScope(jjtn006);
            jjtc006 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte006 instanceof RuntimeException) {
            throw (RuntimeException)jjte006;
          }
          if (jjte006 instanceof ParseException) {
            throw (ParseException)jjte006;
          }
          throw (Error)jjte006;
        } finally {
          if (jjtc006) {
            jjtree.closeNodeScope(jjtn006,  4);
          }
        }
/*@egen*/                
      |/*@bgen(jjtree) #ldrBPrePos( 4) */
        {
          ASTldrBPrePos jjtn007 = new ASTldrBPrePos(JJTLDRBPREPOS);
          boolean jjtc007 = true;
          jjtree.openNodeScope(jjtn007);
        }
        try {
/*@egen*/ ( ( LOOKAHEAD(3) (num_shift() | reg_shift()) | (register() | (number())) ) closeOrCAUp() )/*@bgen(jjtree)*/
        } catch (Throwable jjte007) {
          if (jjtc007) {
            jjtree.clearNodeScope(jjtn007);
            jjtc007 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte007 instanceof RuntimeException) {
            throw (RuntimeException)jjte007;
          }
          if (jjte007 instanceof ParseException) {
            throw (ParseException)jjte007;
          }
          throw (Error)jjte007;
        } finally {
          if (jjtc007) {
            jjtree.closeNodeScope(jjtn007,  4);
          }
        }
/*@egen*/                
      )
   | ( 
        LOOKAHEAD(2)  
        "]" ","
        (/*@bgen(jjtree) #ldrBPostNeg( 3) */
         {
           ASTldrBPostNeg jjtn008 = new ASTldrBPostNeg(JJTLDRBPOSTNEG);
           boolean jjtc008 = true;
           jjtree.openNodeScope(jjtn008);
         }
         try {
/*@egen*/
         ( "-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) )/*@bgen(jjtree)*/
         } catch (Throwable jjte008) {
           if (jjtc008) {
             jjtree.clearNodeScope(jjtn008);
             jjtc008 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte008 instanceof RuntimeException) {
             throw (RuntimeException)jjte008;
           }
           if (jjte008 instanceof ParseException) {
             throw (ParseException)jjte008;
           }
           throw (Error)jjte008;
         } finally {
           if (jjtc008) {
             jjtree.closeNodeScope(jjtn008,  3);
           }
         }
/*@egen*/                
       |/*@bgen(jjtree) #ldrBPostPos( 3) */
         {
           ASTldrBPostPos jjtn009 = new ASTldrBPostPos(JJTLDRBPOSTPOS);
           boolean jjtc009 = true;
           jjtree.openNodeScope(jjtn009);
         }
         try {
/*@egen*/ ( LOOKAHEAD(3)   (num_shift() | reg_shift()) | (register()) | (number()) )/*@bgen(jjtree)*/
         } catch (Throwable jjte009) {
           if (jjtc009) {
             jjtree.clearNodeScope(jjtn009);
             jjtc009 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte009 instanceof RuntimeException) {
             throw (RuntimeException)jjte009;
           }
           if (jjte009 instanceof ParseException) {
             throw (ParseException)jjte009;
           }
           throw (Error)jjte009;
         } finally {
           if (jjtc009) {
             jjtree.closeNodeScope(jjtn009,  3);
           }
         }
/*@egen*/                
        )
        |/*@bgen(jjtree) #ldrBSimple( 3) */
          {
            ASTldrBSimple jjtn010 = new ASTldrBSimple(JJTLDRBSIMPLE);
            boolean jjtc010 = true;
            jjtree.openNodeScope(jjtn010);
          }
          try {
/*@egen*/ closeOrCAUp()/*@bgen(jjtree)*/
          } catch (Throwable jjte010) {
            if (jjtc010) {
              jjtree.clearNodeScope(jjtn010);
              jjtc010 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte010 instanceof RuntimeException) {
              throw (RuntimeException)jjte010;
            }
            if (jjte010 instanceof ParseException) {
              throw (ParseException)jjte010;
            }
            throw (Error)jjte010;
          } finally {
            if (jjtc010) {
              jjtree.closeNodeScope(jjtn010,  3);
            }
          }
/*@egen*/               
     )
    )  )

 | < H >
   (
     register() "," "[" register()
    (
     ","
      (/*@bgen(jjtree) #ldrHPreNeg( 4) */
        {
          ASTldrHPreNeg jjtn011 = new ASTldrHPreNeg(JJTLDRHPRENEG);
          boolean jjtc011 = true;
          jjtree.openNodeScope(jjtn011);
        }
        try {
/*@egen*/ 
        ("-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) closeOrCAUp())/*@bgen(jjtree)*/
        } catch (Throwable jjte011) {
          if (jjtc011) {
            jjtree.clearNodeScope(jjtn011);
            jjtc011 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte011 instanceof RuntimeException) {
            throw (RuntimeException)jjte011;
          }
          if (jjte011 instanceof ParseException) {
            throw (ParseException)jjte011;
          }
          throw (Error)jjte011;
        } finally {
          if (jjtc011) {
            jjtree.closeNodeScope(jjtn011,  4);
          }
        }
/*@egen*/                
      |/*@bgen(jjtree) #ldrHPrePos( 4) */
        {
          ASTldrHPrePos jjtn012 = new ASTldrHPrePos(JJTLDRHPREPOS);
          boolean jjtc012 = true;
          jjtree.openNodeScope(jjtn012);
        }
        try {
/*@egen*/ ( ( LOOKAHEAD(3) (num_shift() | reg_shift()) | (register() | (number())) ) closeOrCAUp() )/*@bgen(jjtree)*/
        } catch (Throwable jjte012) {
          if (jjtc012) {
            jjtree.clearNodeScope(jjtn012);
            jjtc012 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte012 instanceof RuntimeException) {
            throw (RuntimeException)jjte012;
          }
          if (jjte012 instanceof ParseException) {
            throw (ParseException)jjte012;
          }
          throw (Error)jjte012;
        } finally {
          if (jjtc012) {
            jjtree.closeNodeScope(jjtn012,  4);
          }
        }
/*@egen*/                
      )
   | ( 
        LOOKAHEAD(2)  
        "]" ","
        (/*@bgen(jjtree) #ldrHPostNeg( 3) */
         {
           ASTldrHPostNeg jjtn013 = new ASTldrHPostNeg(JJTLDRHPOSTNEG);
           boolean jjtc013 = true;
           jjtree.openNodeScope(jjtn013);
         }
         try {
/*@egen*/
         ( "-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) )/*@bgen(jjtree)*/
         } catch (Throwable jjte013) {
           if (jjtc013) {
             jjtree.clearNodeScope(jjtn013);
             jjtc013 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte013 instanceof RuntimeException) {
             throw (RuntimeException)jjte013;
           }
           if (jjte013 instanceof ParseException) {
             throw (ParseException)jjte013;
           }
           throw (Error)jjte013;
         } finally {
           if (jjtc013) {
             jjtree.closeNodeScope(jjtn013,  3);
           }
         }
/*@egen*/                
       |/*@bgen(jjtree) #ldrHPostPos( 3) */
         {
           ASTldrHPostPos jjtn014 = new ASTldrHPostPos(JJTLDRHPOSTPOS);
           boolean jjtc014 = true;
           jjtree.openNodeScope(jjtn014);
         }
         try {
/*@egen*/ ( LOOKAHEAD(3)   (num_shift() | reg_shift()) | (register()) | (number()) )/*@bgen(jjtree)*/
         } catch (Throwable jjte014) {
           if (jjtc014) {
             jjtree.clearNodeScope(jjtn014);
             jjtc014 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte014 instanceof RuntimeException) {
             throw (RuntimeException)jjte014;
           }
           if (jjte014 instanceof ParseException) {
             throw (ParseException)jjte014;
           }
           throw (Error)jjte014;
         } finally {
           if (jjtc014) {
             jjtree.closeNodeScope(jjtn014,  3);
           }
         }
/*@egen*/                
        )
        |/*@bgen(jjtree) #ldrHSimple( 3) */
          {
            ASTldrHSimple jjtn015 = new ASTldrHSimple(JJTLDRHSIMPLE);
            boolean jjtc015 = true;
            jjtree.openNodeScope(jjtn015);
          }
          try {
/*@egen*/ closeOrCAUp()/*@bgen(jjtree)*/
          } catch (Throwable jjte015) {
            if (jjtc015) {
              jjtree.clearNodeScope(jjtn015);
              jjtc015 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte015 instanceof RuntimeException) {
              throw (RuntimeException)jjte015;
            }
            if (jjte015 instanceof ParseException) {
              throw (ParseException)jjte015;
            }
            throw (Error)jjte015;
          } finally {
            if (jjtc015) {
              jjtree.closeNodeScope(jjtn015,  3);
            }
          }
/*@egen*/               
     )
    )
  )

 | < SCND >
 (
  (
     register() "," "[" register()
    (
     ","
      (/*@bgen(jjtree) #ldrPreNeg( 4) */
        {
          ASTldrPreNeg jjtn016 = new ASTldrPreNeg(JJTLDRPRENEG);
          boolean jjtc016 = true;
          jjtree.openNodeScope(jjtn016);
        }
        try {
/*@egen*/ 
        ("-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) closeOrCAUp())/*@bgen(jjtree)*/
        } catch (Throwable jjte016) {
          if (jjtc016) {
            jjtree.clearNodeScope(jjtn016);
            jjtc016 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte016 instanceof RuntimeException) {
            throw (RuntimeException)jjte016;
          }
          if (jjte016 instanceof ParseException) {
            throw (ParseException)jjte016;
          }
          throw (Error)jjte016;
        } finally {
          if (jjtc016) {
            jjtree.closeNodeScope(jjtn016,  4);
          }
        }
/*@egen*/               
      |/*@bgen(jjtree) #ldrPrePos( 4) */
        {
          ASTldrPrePos jjtn017 = new ASTldrPrePos(JJTLDRPREPOS);
          boolean jjtc017 = true;
          jjtree.openNodeScope(jjtn017);
        }
        try {
/*@egen*/ ( ( LOOKAHEAD(3) (num_shift() | reg_shift()) | (register() | (number())) ) closeOrCAUp() )/*@bgen(jjtree)*/
        } catch (Throwable jjte017) {
          if (jjtc017) {
            jjtree.clearNodeScope(jjtn017);
            jjtc017 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte017 instanceof RuntimeException) {
            throw (RuntimeException)jjte017;
          }
          if (jjte017 instanceof ParseException) {
            throw (ParseException)jjte017;
          }
          throw (Error)jjte017;
        } finally {
          if (jjtc017) {
            jjtree.closeNodeScope(jjtn017,  4);
          }
        }
/*@egen*/               
      )
   | ( 
        LOOKAHEAD(2)  
        "]" ","
        (/*@bgen(jjtree) #ldrPostNeg( 3) */
         {
           ASTldrPostNeg jjtn018 = new ASTldrPostNeg(JJTLDRPOSTNEG);
           boolean jjtc018 = true;
           jjtree.openNodeScope(jjtn018);
         }
         try {
/*@egen*/
         ( "-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) )/*@bgen(jjtree)*/
         } catch (Throwable jjte018) {
           if (jjtc018) {
             jjtree.clearNodeScope(jjtn018);
             jjtc018 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte018 instanceof RuntimeException) {
             throw (RuntimeException)jjte018;
           }
           if (jjte018 instanceof ParseException) {
             throw (ParseException)jjte018;
           }
           throw (Error)jjte018;
         } finally {
           if (jjtc018) {
             jjtree.closeNodeScope(jjtn018,  3);
           }
         }
/*@egen*/               
       |/*@bgen(jjtree) #ldrPostPos( 3) */
         {
           ASTldrPostPos jjtn019 = new ASTldrPostPos(JJTLDRPOSTPOS);
           boolean jjtc019 = true;
           jjtree.openNodeScope(jjtn019);
         }
         try {
/*@egen*/ ( LOOKAHEAD(3)   (num_shift() | reg_shift()) | (register()) | (number()) )/*@bgen(jjtree)*/
         } catch (Throwable jjte019) {
           if (jjtc019) {
             jjtree.clearNodeScope(jjtn019);
             jjtc019 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte019 instanceof RuntimeException) {
             throw (RuntimeException)jjte019;
           }
           if (jjte019 instanceof ParseException) {
             throw (ParseException)jjte019;
           }
           throw (Error)jjte019;
         } finally {
           if (jjtc019) {
             jjtree.closeNodeScope(jjtn019,  3);
           }
         }
/*@egen*/               
        )
        |/*@bgen(jjtree) #ldrSimple( 3) */
          {
            ASTldrSimple jjtn020 = new ASTldrSimple(JJTLDRSIMPLE);
            boolean jjtc020 = true;
            jjtree.openNodeScope(jjtn020);
          }
          try {
/*@egen*/ closeOrCAUp()/*@bgen(jjtree)*/
          } catch (Throwable jjte020) {
            if (jjtc020) {
              jjtree.clearNodeScope(jjtn020);
              jjtc020 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte020 instanceof RuntimeException) {
              throw (RuntimeException)jjte020;
            }
            if (jjte020 instanceof ParseException) {
              throw (ParseException)jjte020;
            }
            throw (Error)jjte020;
          } finally {
            if (jjtc020) {
              jjtree.closeNodeScope(jjtn020,  3);
            }
          }
/*@egen*/              
     )
    )
  )

 | (
     < H >
   (
     register() "," "[" register()
    (
     ","
      (/*@bgen(jjtree) #ldrSHPreNeg( 4) */
        {
          ASTldrSHPreNeg jjtn021 = new ASTldrSHPreNeg(JJTLDRSHPRENEG);
          boolean jjtc021 = true;
          jjtree.openNodeScope(jjtn021);
        }
        try {
/*@egen*/ 
        ("-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) closeOrCAUp())/*@bgen(jjtree)*/
        } catch (Throwable jjte021) {
          if (jjtc021) {
            jjtree.clearNodeScope(jjtn021);
            jjtc021 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte021 instanceof RuntimeException) {
            throw (RuntimeException)jjte021;
          }
          if (jjte021 instanceof ParseException) {
            throw (ParseException)jjte021;
          }
          throw (Error)jjte021;
        } finally {
          if (jjtc021) {
            jjtree.closeNodeScope(jjtn021,  4);
          }
        }
/*@egen*/                 
      |/*@bgen(jjtree) #ldrSHPrePos( 4) */
        {
          ASTldrSHPrePos jjtn022 = new ASTldrSHPrePos(JJTLDRSHPREPOS);
          boolean jjtc022 = true;
          jjtree.openNodeScope(jjtn022);
        }
        try {
/*@egen*/ ( ( LOOKAHEAD(3) (num_shift() | reg_shift()) | (register() | (number())) ) closeOrCAUp() )/*@bgen(jjtree)*/
        } catch (Throwable jjte022) {
          if (jjtc022) {
            jjtree.clearNodeScope(jjtn022);
            jjtc022 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte022 instanceof RuntimeException) {
            throw (RuntimeException)jjte022;
          }
          if (jjte022 instanceof ParseException) {
            throw (ParseException)jjte022;
          }
          throw (Error)jjte022;
        } finally {
          if (jjtc022) {
            jjtree.closeNodeScope(jjtn022,  4);
          }
        }
/*@egen*/                 
      )
   | ( 
        LOOKAHEAD(2)  
        "]" ","
        (/*@bgen(jjtree) #ldrSHPostNeg( 3) */
         {
           ASTldrSHPostNeg jjtn023 = new ASTldrSHPostNeg(JJTLDRSHPOSTNEG);
           boolean jjtc023 = true;
           jjtree.openNodeScope(jjtn023);
         }
         try {
/*@egen*/
         ( "-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) )/*@bgen(jjtree)*/
         } catch (Throwable jjte023) {
           if (jjtc023) {
             jjtree.clearNodeScope(jjtn023);
             jjtc023 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte023 instanceof RuntimeException) {
             throw (RuntimeException)jjte023;
           }
           if (jjte023 instanceof ParseException) {
             throw (ParseException)jjte023;
           }
           throw (Error)jjte023;
         } finally {
           if (jjtc023) {
             jjtree.closeNodeScope(jjtn023,  3);
           }
         }
/*@egen*/                 
       |/*@bgen(jjtree) #ldrSHPostPos( 3) */
         {
           ASTldrSHPostPos jjtn024 = new ASTldrSHPostPos(JJTLDRSHPOSTPOS);
           boolean jjtc024 = true;
           jjtree.openNodeScope(jjtn024);
         }
         try {
/*@egen*/ ( LOOKAHEAD(3)   (num_shift() | reg_shift()) | (register()) | (number()) )/*@bgen(jjtree)*/
         } catch (Throwable jjte024) {
           if (jjtc024) {
             jjtree.clearNodeScope(jjtn024);
             jjtc024 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte024 instanceof RuntimeException) {
             throw (RuntimeException)jjte024;
           }
           if (jjte024 instanceof ParseException) {
             throw (ParseException)jjte024;
           }
           throw (Error)jjte024;
         } finally {
           if (jjtc024) {
             jjtree.closeNodeScope(jjtn024,  3);
           }
         }
/*@egen*/                 
        )
        |/*@bgen(jjtree) #ldrSHSimple( 3) */
          {
            ASTldrSHSimple jjtn025 = new ASTldrSHSimple(JJTLDRSHSIMPLE);
            boolean jjtc025 = true;
            jjtree.openNodeScope(jjtn025);
          }
          try {
/*@egen*/ closeOrCAUp()/*@bgen(jjtree)*/
          } catch (Throwable jjte025) {
            if (jjtc025) {
              jjtree.clearNodeScope(jjtn025);
              jjtc025 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte025 instanceof RuntimeException) {
              throw (RuntimeException)jjte025;
            }
            if (jjte025 instanceof ParseException) {
              throw (ParseException)jjte025;
            }
            throw (Error)jjte025;
          } finally {
            if (jjtc025) {
              jjtree.closeNodeScope(jjtn025,  3);
            }
          }
/*@egen*/                
     )
    )
  )  )

 | (
    < B >
  (
     register() "," "[" register()
    (
     ","
      (/*@bgen(jjtree) #ldrSBPreNeg( 4) */
        {
          ASTldrSBPreNeg jjtn026 = new ASTldrSBPreNeg(JJTLDRSBPRENEG);
          boolean jjtc026 = true;
          jjtree.openNodeScope(jjtn026);
        }
        try {
/*@egen*/ 
        ("-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) closeOrCAUp())/*@bgen(jjtree)*/
        } catch (Throwable jjte026) {
          if (jjtc026) {
            jjtree.clearNodeScope(jjtn026);
            jjtc026 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte026 instanceof RuntimeException) {
            throw (RuntimeException)jjte026;
          }
          if (jjte026 instanceof ParseException) {
            throw (ParseException)jjte026;
          }
          throw (Error)jjte026;
        } finally {
          if (jjtc026) {
            jjtree.closeNodeScope(jjtn026,  4);
          }
        }
/*@egen*/                 
      |/*@bgen(jjtree) #ldrSBPrePos( 4) */
        {
          ASTldrSBPrePos jjtn027 = new ASTldrSBPrePos(JJTLDRSBPREPOS);
          boolean jjtc027 = true;
          jjtree.openNodeScope(jjtn027);
        }
        try {
/*@egen*/ ( ( LOOKAHEAD(3) (num_shift() | reg_shift()) | (register() | (number())) ) closeOrCAUp() )/*@bgen(jjtree)*/
        } catch (Throwable jjte027) {
          if (jjtc027) {
            jjtree.clearNodeScope(jjtn027);
            jjtc027 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte027 instanceof RuntimeException) {
            throw (RuntimeException)jjte027;
          }
          if (jjte027 instanceof ParseException) {
            throw (ParseException)jjte027;
          }
          throw (Error)jjte027;
        } finally {
          if (jjtc027) {
            jjtree.closeNodeScope(jjtn027,  4);
          }
        }
/*@egen*/                 
      )
   | ( 
        LOOKAHEAD(2)  
        "]" ","
        (/*@bgen(jjtree) #ldrSBPostNeg( 3) */
         {
           ASTldrSBPostNeg jjtn028 = new ASTldrSBPostNeg(JJTLDRSBPOSTNEG);
           boolean jjtc028 = true;
           jjtree.openNodeScope(jjtn028);
         }
         try {
/*@egen*/
         ( "-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) )/*@bgen(jjtree)*/
         } catch (Throwable jjte028) {
           if (jjtc028) {
             jjtree.clearNodeScope(jjtn028);
             jjtc028 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte028 instanceof RuntimeException) {
             throw (RuntimeException)jjte028;
           }
           if (jjte028 instanceof ParseException) {
             throw (ParseException)jjte028;
           }
           throw (Error)jjte028;
         } finally {
           if (jjtc028) {
             jjtree.closeNodeScope(jjtn028,  3);
           }
         }
/*@egen*/                 
       |/*@bgen(jjtree) #ldrSBPostPos( 3) */
         {
           ASTldrSBPostPos jjtn029 = new ASTldrSBPostPos(JJTLDRSBPOSTPOS);
           boolean jjtc029 = true;
           jjtree.openNodeScope(jjtn029);
         }
         try {
/*@egen*/ ( LOOKAHEAD(3)   (num_shift() | reg_shift()) | (register()) | (number()) )/*@bgen(jjtree)*/
         } catch (Throwable jjte029) {
           if (jjtc029) {
             jjtree.clearNodeScope(jjtn029);
             jjtc029 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte029 instanceof RuntimeException) {
             throw (RuntimeException)jjte029;
           }
           if (jjte029 instanceof ParseException) {
             throw (ParseException)jjte029;
           }
           throw (Error)jjte029;
         } finally {
           if (jjtc029) {
             jjtree.closeNodeScope(jjtn029,  3);
           }
         }
/*@egen*/                 
        )
        |/*@bgen(jjtree) #ldrSBSimple( 3) */
          {
            ASTldrSBSimple jjtn030 = new ASTldrSBSimple(JJTLDRSBSIMPLE);
            boolean jjtc030 = true;
            jjtree.openNodeScope(jjtn030);
          }
          try {
/*@egen*/ closeOrCAUp()/*@bgen(jjtree)*/
          } catch (Throwable jjte030) {
            if (jjtc030) {
              jjtree.clearNodeScope(jjtn030);
              jjtc030 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte030 instanceof RuntimeException) {
              throw (RuntimeException)jjte030;
            }
            if (jjte030 instanceof ParseException) {
              throw (ParseException)jjte030;
            }
            throw (Error)jjte030;
          } finally {
            if (jjtc030) {
              jjtree.closeNodeScope(jjtn030,  3);
            }
          }
/*@egen*/                
     )
    )
  )
  )
   )
)

| cond()
(    
  (
    register() "," "[" register()
    (
     ","
      (/*@bgen(jjtree) #ldrCPreNeg( 5) */
        {
          ASTldrCPreNeg jjtn031 = new ASTldrCPreNeg(JJTLDRCPRENEG);
          boolean jjtc031 = true;
          jjtree.openNodeScope(jjtn031);
        }
        try {
/*@egen*/ 
        ("-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) closeOrCAUp())/*@bgen(jjtree)*/
        } catch (Throwable jjte031) {
          if (jjtc031) {
            jjtree.clearNodeScope(jjtn031);
            jjtc031 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte031 instanceof RuntimeException) {
            throw (RuntimeException)jjte031;
          }
          if (jjte031 instanceof ParseException) {
            throw (ParseException)jjte031;
          }
          throw (Error)jjte031;
        } finally {
          if (jjtc031) {
            jjtree.closeNodeScope(jjtn031,  5);
          }
        }
/*@egen*/                
      |/*@bgen(jjtree) #ldrCPrePos( 5) */
        {
          ASTldrCPrePos jjtn032 = new ASTldrCPrePos(JJTLDRCPREPOS);
          boolean jjtc032 = true;
          jjtree.openNodeScope(jjtn032);
        }
        try {
/*@egen*/ ( ( LOOKAHEAD(3) (num_shift() | reg_shift()) | (register() | (number())) ) closeOrCAUp() )/*@bgen(jjtree)*/
        } catch (Throwable jjte032) {
          if (jjtc032) {
            jjtree.clearNodeScope(jjtn032);
            jjtc032 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte032 instanceof RuntimeException) {
            throw (RuntimeException)jjte032;
          }
          if (jjte032 instanceof ParseException) {
            throw (ParseException)jjte032;
          }
          throw (Error)jjte032;
        } finally {
          if (jjtc032) {
            jjtree.closeNodeScope(jjtn032,  5);
          }
        }
/*@egen*/                
      )
   | ( 
        LOOKAHEAD(2)  
        "]" ","
        (/*@bgen(jjtree) #ldrCPostNeg( 4) */
         {
           ASTldrCPostNeg jjtn033 = new ASTldrCPostNeg(JJTLDRCPOSTNEG);
           boolean jjtc033 = true;
           jjtree.openNodeScope(jjtn033);
         }
         try {
/*@egen*/
         ( "-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) )/*@bgen(jjtree)*/
         } catch (Throwable jjte033) {
           if (jjtc033) {
             jjtree.clearNodeScope(jjtn033);
             jjtc033 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte033 instanceof RuntimeException) {
             throw (RuntimeException)jjte033;
           }
           if (jjte033 instanceof ParseException) {
             throw (ParseException)jjte033;
           }
           throw (Error)jjte033;
         } finally {
           if (jjtc033) {
             jjtree.closeNodeScope(jjtn033,  4);
           }
         }
/*@egen*/                
       |/*@bgen(jjtree) #ldrCPostPos( 4) */
         {
           ASTldrCPostPos jjtn034 = new ASTldrCPostPos(JJTLDRCPOSTPOS);
           boolean jjtc034 = true;
           jjtree.openNodeScope(jjtn034);
         }
         try {
/*@egen*/ ( LOOKAHEAD(3)   (num_shift() | reg_shift()) | (register()) | (number()) )/*@bgen(jjtree)*/
         } catch (Throwable jjte034) {
           if (jjtc034) {
             jjtree.clearNodeScope(jjtn034);
             jjtc034 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte034 instanceof RuntimeException) {
             throw (RuntimeException)jjte034;
           }
           if (jjte034 instanceof ParseException) {
             throw (ParseException)jjte034;
           }
           throw (Error)jjte034;
         } finally {
           if (jjtc034) {
             jjtree.closeNodeScope(jjtn034,  4);
           }
         }
/*@egen*/                
        )
        |/*@bgen(jjtree) #ldrCSimple( 4) */
          {
            ASTldrCSimple jjtn035 = new ASTldrCSimple(JJTLDRCSIMPLE);
            boolean jjtc035 = true;
            jjtree.openNodeScope(jjtn035);
          }
          try {
/*@egen*/ closeOrCAUp()/*@bgen(jjtree)*/
          } catch (Throwable jjte035) {
            if (jjtc035) {
              jjtree.clearNodeScope(jjtn035);
              jjtc035 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte035 instanceof RuntimeException) {
              throw (RuntimeException)jjte035;
            }
            if (jjte035 instanceof ParseException) {
              throw (ParseException)jjte035;
            }
            throw (Error)jjte035;
          } finally {
            if (jjtc035) {
              jjtree.closeNodeScope(jjtn035,  4);
            }
          }
/*@egen*/               
     )
    )
  )

 | < B >
  (
     register() "," "[" register()
    (
     ","
      (/*@bgen(jjtree) #ldrCBPreNeg( 5) */
        {
          ASTldrCBPreNeg jjtn036 = new ASTldrCBPreNeg(JJTLDRCBPRENEG);
          boolean jjtc036 = true;
          jjtree.openNodeScope(jjtn036);
        }
        try {
/*@egen*/ 
        ("-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) closeOrCAUp())/*@bgen(jjtree)*/
        } catch (Throwable jjte036) {
          if (jjtc036) {
            jjtree.clearNodeScope(jjtn036);
            jjtc036 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte036 instanceof RuntimeException) {
            throw (RuntimeException)jjte036;
          }
          if (jjte036 instanceof ParseException) {
            throw (ParseException)jjte036;
          }
          throw (Error)jjte036;
        } finally {
          if (jjtc036) {
            jjtree.closeNodeScope(jjtn036,  5);
          }
        }
/*@egen*/                 
      |/*@bgen(jjtree) #ldrCBPrePos( 5) */
        {
          ASTldrCBPrePos jjtn037 = new ASTldrCBPrePos(JJTLDRCBPREPOS);
          boolean jjtc037 = true;
          jjtree.openNodeScope(jjtn037);
        }
        try {
/*@egen*/ ( ( LOOKAHEAD(3) (num_shift() | reg_shift()) | (register() | (number())) ) closeOrCAUp() )/*@bgen(jjtree)*/
        } catch (Throwable jjte037) {
          if (jjtc037) {
            jjtree.clearNodeScope(jjtn037);
            jjtc037 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte037 instanceof RuntimeException) {
            throw (RuntimeException)jjte037;
          }
          if (jjte037 instanceof ParseException) {
            throw (ParseException)jjte037;
          }
          throw (Error)jjte037;
        } finally {
          if (jjtc037) {
            jjtree.closeNodeScope(jjtn037,  5);
          }
        }
/*@egen*/                 
      )
   | ( 
        LOOKAHEAD(2)  
        "]" ","
        (/*@bgen(jjtree) #ldrCBPostNeg( 4) */
         {
           ASTldrCBPostNeg jjtn038 = new ASTldrCBPostNeg(JJTLDRCBPOSTNEG);
           boolean jjtc038 = true;
           jjtree.openNodeScope(jjtn038);
         }
         try {
/*@egen*/
         ( "-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) )/*@bgen(jjtree)*/
         } catch (Throwable jjte038) {
           if (jjtc038) {
             jjtree.clearNodeScope(jjtn038);
             jjtc038 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte038 instanceof RuntimeException) {
             throw (RuntimeException)jjte038;
           }
           if (jjte038 instanceof ParseException) {
             throw (ParseException)jjte038;
           }
           throw (Error)jjte038;
         } finally {
           if (jjtc038) {
             jjtree.closeNodeScope(jjtn038,  4);
           }
         }
/*@egen*/                 
       |/*@bgen(jjtree) #ldrCBPostPos( 4) */
         {
           ASTldrCBPostPos jjtn039 = new ASTldrCBPostPos(JJTLDRCBPOSTPOS);
           boolean jjtc039 = true;
           jjtree.openNodeScope(jjtn039);
         }
         try {
/*@egen*/ ( LOOKAHEAD(3)   (num_shift() | reg_shift()) | (register()) | (number()) )/*@bgen(jjtree)*/
         } catch (Throwable jjte039) {
           if (jjtc039) {
             jjtree.clearNodeScope(jjtn039);
             jjtc039 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte039 instanceof RuntimeException) {
             throw (RuntimeException)jjte039;
           }
           if (jjte039 instanceof ParseException) {
             throw (ParseException)jjte039;
           }
           throw (Error)jjte039;
         } finally {
           if (jjtc039) {
             jjtree.closeNodeScope(jjtn039,  4);
           }
         }
/*@egen*/                 
        )
        |/*@bgen(jjtree) #ldrCBSimple( 4) */
          {
            ASTldrCBSimple jjtn040 = new ASTldrCBSimple(JJTLDRCBSIMPLE);
            boolean jjtc040 = true;
            jjtree.openNodeScope(jjtn040);
          }
          try {
/*@egen*/ closeOrCAUp()/*@bgen(jjtree)*/
          } catch (Throwable jjte040) {
            if (jjtc040) {
              jjtree.clearNodeScope(jjtn040);
              jjtc040 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte040 instanceof RuntimeException) {
              throw (RuntimeException)jjte040;
            }
            if (jjte040 instanceof ParseException) {
              throw (ParseException)jjte040;
            }
            throw (Error)jjte040;
          } finally {
            if (jjtc040) {
              jjtree.closeNodeScope(jjtn040,  4);
            }
          }
/*@egen*/                
     )
    )
  )

 | < H >
   (
     register() "," "[" register()
    (
     ","
      (/*@bgen(jjtree) #ldrCHPreNeg( 5) */
        {
          ASTldrCHPreNeg jjtn041 = new ASTldrCHPreNeg(JJTLDRCHPRENEG);
          boolean jjtc041 = true;
          jjtree.openNodeScope(jjtn041);
        }
        try {
/*@egen*/ 
        ("-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) closeOrCAUp())/*@bgen(jjtree)*/
        } catch (Throwable jjte041) {
          if (jjtc041) {
            jjtree.clearNodeScope(jjtn041);
            jjtc041 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte041 instanceof RuntimeException) {
            throw (RuntimeException)jjte041;
          }
          if (jjte041 instanceof ParseException) {
            throw (ParseException)jjte041;
          }
          throw (Error)jjte041;
        } finally {
          if (jjtc041) {
            jjtree.closeNodeScope(jjtn041,  5);
          }
        }
/*@egen*/                 
      |/*@bgen(jjtree) #ldrCHPrePos( 5) */
        {
          ASTldrCHPrePos jjtn042 = new ASTldrCHPrePos(JJTLDRCHPREPOS);
          boolean jjtc042 = true;
          jjtree.openNodeScope(jjtn042);
        }
        try {
/*@egen*/ ( ( LOOKAHEAD(3) (num_shift() | reg_shift()) | (register() | (number())) ) closeOrCAUp() )/*@bgen(jjtree)*/
        } catch (Throwable jjte042) {
          if (jjtc042) {
            jjtree.clearNodeScope(jjtn042);
            jjtc042 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte042 instanceof RuntimeException) {
            throw (RuntimeException)jjte042;
          }
          if (jjte042 instanceof ParseException) {
            throw (ParseException)jjte042;
          }
          throw (Error)jjte042;
        } finally {
          if (jjtc042) {
            jjtree.closeNodeScope(jjtn042,  5);
          }
        }
/*@egen*/                 
      )
   | ( 
        LOOKAHEAD(2)  
        "]" ","
        (/*@bgen(jjtree) #ldrCHPostNeg( 4) */
         {
           ASTldrCHPostNeg jjtn043 = new ASTldrCHPostNeg(JJTLDRCHPOSTNEG);
           boolean jjtc043 = true;
           jjtree.openNodeScope(jjtn043);
         }
         try {
/*@egen*/
         ( "-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) )/*@bgen(jjtree)*/
         } catch (Throwable jjte043) {
           if (jjtc043) {
             jjtree.clearNodeScope(jjtn043);
             jjtc043 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte043 instanceof RuntimeException) {
             throw (RuntimeException)jjte043;
           }
           if (jjte043 instanceof ParseException) {
             throw (ParseException)jjte043;
           }
           throw (Error)jjte043;
         } finally {
           if (jjtc043) {
             jjtree.closeNodeScope(jjtn043,  4);
           }
         }
/*@egen*/                 
       |/*@bgen(jjtree) #ldrCHPostPos( 4) */
         {
           ASTldrCHPostPos jjtn044 = new ASTldrCHPostPos(JJTLDRCHPOSTPOS);
           boolean jjtc044 = true;
           jjtree.openNodeScope(jjtn044);
         }
         try {
/*@egen*/ ( LOOKAHEAD(3)   (num_shift() | reg_shift()) | (register()) | (number()) )/*@bgen(jjtree)*/
         } catch (Throwable jjte044) {
           if (jjtc044) {
             jjtree.clearNodeScope(jjtn044);
             jjtc044 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte044 instanceof RuntimeException) {
             throw (RuntimeException)jjte044;
           }
           if (jjte044 instanceof ParseException) {
             throw (ParseException)jjte044;
           }
           throw (Error)jjte044;
         } finally {
           if (jjtc044) {
             jjtree.closeNodeScope(jjtn044,  4);
           }
         }
/*@egen*/                 
        )
        |/*@bgen(jjtree) #ldrCHSimple( 4) */
          {
            ASTldrCHSimple jjtn045 = new ASTldrCHSimple(JJTLDRCHSIMPLE);
            boolean jjtc045 = true;
            jjtree.openNodeScope(jjtn045);
          }
          try {
/*@egen*/ closeOrCAUp()/*@bgen(jjtree)*/
          } catch (Throwable jjte045) {
            if (jjtc045) {
              jjtree.clearNodeScope(jjtn045);
              jjtc045 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte045 instanceof RuntimeException) {
              throw (RuntimeException)jjte045;
            }
            if (jjte045 instanceof ParseException) {
              throw (ParseException)jjte045;
            }
            throw (Error)jjte045;
          } finally {
            if (jjtc045) {
              jjtree.closeNodeScope(jjtn045,  4);
            }
          }
/*@egen*/                
     )
    )
  )

 | < SCND >
 (
  (
     register() "," "[" register()
    (
     ","
      (/*@bgen(jjtree) #ldrCPreNeg( 5) */
        {
          ASTldrCPreNeg jjtn046 = new ASTldrCPreNeg(JJTLDRCPRENEG);
          boolean jjtc046 = true;
          jjtree.openNodeScope(jjtn046);
        }
        try {
/*@egen*/ 
        ("-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) closeOrCAUp())/*@bgen(jjtree)*/
        } catch (Throwable jjte046) {
          if (jjtc046) {
            jjtree.clearNodeScope(jjtn046);
            jjtc046 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte046 instanceof RuntimeException) {
            throw (RuntimeException)jjte046;
          }
          if (jjte046 instanceof ParseException) {
            throw (ParseException)jjte046;
          }
          throw (Error)jjte046;
        } finally {
          if (jjtc046) {
            jjtree.closeNodeScope(jjtn046,  5);
          }
        }
/*@egen*/                
      |/*@bgen(jjtree) #ldrCPrePos( 5) */
        {
          ASTldrCPrePos jjtn047 = new ASTldrCPrePos(JJTLDRCPREPOS);
          boolean jjtc047 = true;
          jjtree.openNodeScope(jjtn047);
        }
        try {
/*@egen*/ ( ( LOOKAHEAD(3) (num_shift() | reg_shift()) | (register() | (number())) ) closeOrCAUp() )/*@bgen(jjtree)*/
        } catch (Throwable jjte047) {
          if (jjtc047) {
            jjtree.clearNodeScope(jjtn047);
            jjtc047 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte047 instanceof RuntimeException) {
            throw (RuntimeException)jjte047;
          }
          if (jjte047 instanceof ParseException) {
            throw (ParseException)jjte047;
          }
          throw (Error)jjte047;
        } finally {
          if (jjtc047) {
            jjtree.closeNodeScope(jjtn047,  5);
          }
        }
/*@egen*/                
      )
   | ( 
        LOOKAHEAD(2)  
        "]" ","
        (/*@bgen(jjtree) #ldrCPostNeg( 4) */
         {
           ASTldrCPostNeg jjtn048 = new ASTldrCPostNeg(JJTLDRCPOSTNEG);
           boolean jjtc048 = true;
           jjtree.openNodeScope(jjtn048);
         }
         try {
/*@egen*/
         ( "-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) )/*@bgen(jjtree)*/
         } catch (Throwable jjte048) {
           if (jjtc048) {
             jjtree.clearNodeScope(jjtn048);
             jjtc048 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte048 instanceof RuntimeException) {
             throw (RuntimeException)jjte048;
           }
           if (jjte048 instanceof ParseException) {
             throw (ParseException)jjte048;
           }
           throw (Error)jjte048;
         } finally {
           if (jjtc048) {
             jjtree.closeNodeScope(jjtn048,  4);
           }
         }
/*@egen*/                
       |/*@bgen(jjtree) #ldrCPostPos( 4) */
         {
           ASTldrCPostPos jjtn049 = new ASTldrCPostPos(JJTLDRCPOSTPOS);
           boolean jjtc049 = true;
           jjtree.openNodeScope(jjtn049);
         }
         try {
/*@egen*/ ( LOOKAHEAD(3)   (num_shift() | reg_shift()) | (register()) | (number()) )/*@bgen(jjtree)*/
         } catch (Throwable jjte049) {
           if (jjtc049) {
             jjtree.clearNodeScope(jjtn049);
             jjtc049 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte049 instanceof RuntimeException) {
             throw (RuntimeException)jjte049;
           }
           if (jjte049 instanceof ParseException) {
             throw (ParseException)jjte049;
           }
           throw (Error)jjte049;
         } finally {
           if (jjtc049) {
             jjtree.closeNodeScope(jjtn049,  4);
           }
         }
/*@egen*/                
        )
        |/*@bgen(jjtree) #ldrCSimple( 4) */
          {
            ASTldrCSimple jjtn050 = new ASTldrCSimple(JJTLDRCSIMPLE);
            boolean jjtc050 = true;
            jjtree.openNodeScope(jjtn050);
          }
          try {
/*@egen*/ closeOrCAUp()/*@bgen(jjtree)*/
          } catch (Throwable jjte050) {
            if (jjtc050) {
              jjtree.clearNodeScope(jjtn050);
              jjtc050 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte050 instanceof RuntimeException) {
              throw (RuntimeException)jjte050;
            }
            if (jjte050 instanceof ParseException) {
              throw (ParseException)jjte050;
            }
            throw (Error)jjte050;
          } finally {
            if (jjtc050) {
              jjtree.closeNodeScope(jjtn050,  4);
            }
          }
/*@egen*/               
     )
    )
  )

 | (
     < H >
   (
     register() "," "[" register()
    (
     ","
      (/*@bgen(jjtree) #ldrCSHPreNeg( 5) */
        {
          ASTldrCSHPreNeg jjtn051 = new ASTldrCSHPreNeg(JJTLDRCSHPRENEG);
          boolean jjtc051 = true;
          jjtree.openNodeScope(jjtn051);
        }
        try {
/*@egen*/ 
        ("-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) closeOrCAUp())/*@bgen(jjtree)*/
        } catch (Throwable jjte051) {
          if (jjtc051) {
            jjtree.clearNodeScope(jjtn051);
            jjtc051 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte051 instanceof RuntimeException) {
            throw (RuntimeException)jjte051;
          }
          if (jjte051 instanceof ParseException) {
            throw (ParseException)jjte051;
          }
          throw (Error)jjte051;
        } finally {
          if (jjtc051) {
            jjtree.closeNodeScope(jjtn051,  5);
          }
        }
/*@egen*/                  
      |/*@bgen(jjtree) #ldrCSHPrePos( 5) */
        {
          ASTldrCSHPrePos jjtn052 = new ASTldrCSHPrePos(JJTLDRCSHPREPOS);
          boolean jjtc052 = true;
          jjtree.openNodeScope(jjtn052);
        }
        try {
/*@egen*/ ( ( LOOKAHEAD(3) (num_shift() | reg_shift()) | (register() | (number())) ) closeOrCAUp() )/*@bgen(jjtree)*/
        } catch (Throwable jjte052) {
          if (jjtc052) {
            jjtree.clearNodeScope(jjtn052);
            jjtc052 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte052 instanceof RuntimeException) {
            throw (RuntimeException)jjte052;
          }
          if (jjte052 instanceof ParseException) {
            throw (ParseException)jjte052;
          }
          throw (Error)jjte052;
        } finally {
          if (jjtc052) {
            jjtree.closeNodeScope(jjtn052,  5);
          }
        }
/*@egen*/                  
      )
   | ( 
        LOOKAHEAD(2)  
        "]" ","
        (/*@bgen(jjtree) #ldrCSHPostNeg( 4) */
         {
           ASTldrCSHPostNeg jjtn053 = new ASTldrCSHPostNeg(JJTLDRCSHPOSTNEG);
           boolean jjtc053 = true;
           jjtree.openNodeScope(jjtn053);
         }
         try {
/*@egen*/
         ( "-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) )/*@bgen(jjtree)*/
         } catch (Throwable jjte053) {
           if (jjtc053) {
             jjtree.clearNodeScope(jjtn053);
             jjtc053 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte053 instanceof RuntimeException) {
             throw (RuntimeException)jjte053;
           }
           if (jjte053 instanceof ParseException) {
             throw (ParseException)jjte053;
           }
           throw (Error)jjte053;
         } finally {
           if (jjtc053) {
             jjtree.closeNodeScope(jjtn053,  4);
           }
         }
/*@egen*/                  
       |/*@bgen(jjtree) #ldrCSHPostPos( 4) */
         {
           ASTldrCSHPostPos jjtn054 = new ASTldrCSHPostPos(JJTLDRCSHPOSTPOS);
           boolean jjtc054 = true;
           jjtree.openNodeScope(jjtn054);
         }
         try {
/*@egen*/ ( LOOKAHEAD(3)   (num_shift() | reg_shift()) | (register()) | (number()) )/*@bgen(jjtree)*/
         } catch (Throwable jjte054) {
           if (jjtc054) {
             jjtree.clearNodeScope(jjtn054);
             jjtc054 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte054 instanceof RuntimeException) {
             throw (RuntimeException)jjte054;
           }
           if (jjte054 instanceof ParseException) {
             throw (ParseException)jjte054;
           }
           throw (Error)jjte054;
         } finally {
           if (jjtc054) {
             jjtree.closeNodeScope(jjtn054,  4);
           }
         }
/*@egen*/                  
        )
        |/*@bgen(jjtree) #ldrCSHSimple( 4) */
          {
            ASTldrCSHSimple jjtn055 = new ASTldrCSHSimple(JJTLDRCSHSIMPLE);
            boolean jjtc055 = true;
            jjtree.openNodeScope(jjtn055);
          }
          try {
/*@egen*/ closeOrCAUp()/*@bgen(jjtree)*/
          } catch (Throwable jjte055) {
            if (jjtc055) {
              jjtree.clearNodeScope(jjtn055);
              jjtc055 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte055 instanceof RuntimeException) {
              throw (RuntimeException)jjte055;
            }
            if (jjte055 instanceof ParseException) {
              throw (ParseException)jjte055;
            }
            throw (Error)jjte055;
          } finally {
            if (jjtc055) {
              jjtree.closeNodeScope(jjtn055,  4);
            }
          }
/*@egen*/                 
     )
    )
  )
  )

 | (
    < B >
  (
     register() "," "[" register()
    (
     ","
      (/*@bgen(jjtree) #ldrCSBPreNeg( 5) */
        {
          ASTldrCSBPreNeg jjtn056 = new ASTldrCSBPreNeg(JJTLDRCSBPRENEG);
          boolean jjtc056 = true;
          jjtree.openNodeScope(jjtn056);
        }
        try {
/*@egen*/ 
        ("-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) closeOrCAUp())/*@bgen(jjtree)*/
        } catch (Throwable jjte056) {
          if (jjtc056) {
            jjtree.clearNodeScope(jjtn056);
            jjtc056 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte056 instanceof RuntimeException) {
            throw (RuntimeException)jjte056;
          }
          if (jjte056 instanceof ParseException) {
            throw (ParseException)jjte056;
          }
          throw (Error)jjte056;
        } finally {
          if (jjtc056) {
            jjtree.closeNodeScope(jjtn056,  5);
          }
        }
/*@egen*/                  
      |/*@bgen(jjtree) #ldrCSBPrePos( 5) */
        {
          ASTldrCSBPrePos jjtn057 = new ASTldrCSBPrePos(JJTLDRCSBPREPOS);
          boolean jjtc057 = true;
          jjtree.openNodeScope(jjtn057);
        }
        try {
/*@egen*/ ( ( LOOKAHEAD(3) (num_shift() | reg_shift()) | (register() | (number())) ) closeOrCAUp() )/*@bgen(jjtree)*/
        } catch (Throwable jjte057) {
          if (jjtc057) {
            jjtree.clearNodeScope(jjtn057);
            jjtc057 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte057 instanceof RuntimeException) {
            throw (RuntimeException)jjte057;
          }
          if (jjte057 instanceof ParseException) {
            throw (ParseException)jjte057;
          }
          throw (Error)jjte057;
        } finally {
          if (jjtc057) {
            jjtree.closeNodeScope(jjtn057,  5);
          }
        }
/*@egen*/                  
      )
   | ( 
        LOOKAHEAD(2)  
        "]" ","
        (/*@bgen(jjtree) #ldrCSBPostNeg( 4) */
         {
           ASTldrCSBPostNeg jjtn058 = new ASTldrCSBPostNeg(JJTLDRCSBPOSTNEG);
           boolean jjtc058 = true;
           jjtree.openNodeScope(jjtn058);
         }
         try {
/*@egen*/
         ( "-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) )/*@bgen(jjtree)*/
         } catch (Throwable jjte058) {
           if (jjtc058) {
             jjtree.clearNodeScope(jjtn058);
             jjtc058 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte058 instanceof RuntimeException) {
             throw (RuntimeException)jjte058;
           }
           if (jjte058 instanceof ParseException) {
             throw (ParseException)jjte058;
           }
           throw (Error)jjte058;
         } finally {
           if (jjtc058) {
             jjtree.closeNodeScope(jjtn058,  4);
           }
         }
/*@egen*/                  
       |/*@bgen(jjtree) #ldrCSBPostPos( 4) */
         {
           ASTldrCSBPostPos jjtn059 = new ASTldrCSBPostPos(JJTLDRCSBPOSTPOS);
           boolean jjtc059 = true;
           jjtree.openNodeScope(jjtn059);
         }
         try {
/*@egen*/ ( LOOKAHEAD(3)   (num_shift() | reg_shift()) | (register()) | (number()) )/*@bgen(jjtree)*/
         } catch (Throwable jjte059) {
           if (jjtc059) {
             jjtree.clearNodeScope(jjtn059);
             jjtc059 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte059 instanceof RuntimeException) {
             throw (RuntimeException)jjte059;
           }
           if (jjte059 instanceof ParseException) {
             throw (ParseException)jjte059;
           }
           throw (Error)jjte059;
         } finally {
           if (jjtc059) {
             jjtree.closeNodeScope(jjtn059,  4);
           }
         }
/*@egen*/                  
        )
        |/*@bgen(jjtree) #ldrCSBSimple( 4) */
          {
            ASTldrCSBSimple jjtn060 = new ASTldrCSBSimple(JJTLDRCSBSIMPLE);
            boolean jjtc060 = true;
            jjtree.openNodeScope(jjtn060);
          }
          try {
/*@egen*/ closeOrCAUp()/*@bgen(jjtree)*/
          } catch (Throwable jjte060) {
            if (jjtc060) {
              jjtree.clearNodeScope(jjtn060);
              jjtc060 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte060 instanceof RuntimeException) {
              throw (RuntimeException)jjte060;
            }
            if (jjte060 instanceof ParseException) {
              throw (ParseException)jjte060;
            }
            throw (Error)jjte060;
          } finally {
            if (jjtc060) {
              jjtree.closeNodeScope(jjtn060,  4);
            }
          }
/*@egen*/                 
     )
    )
  )
  )
  
 )
)
)
}

void str()      :
{}
{
  < STR >
(  
(    
  (
    register() "," "[" register()
    (
     ","
      (/*@bgen(jjtree) #strPreNeg( 4) */
        {
          ASTstrPreNeg jjtn001 = new ASTstrPreNeg(JJTSTRPRENEG);
          boolean jjtc001 = true;
          jjtree.openNodeScope(jjtn001);
        }
        try {
/*@egen*/ 
        ("-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) closeOrCAUp())/*@bgen(jjtree)*/
        } catch (Throwable jjte001) {
          if (jjtc001) {
            jjtree.clearNodeScope(jjtn001);
            jjtc001 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte001 instanceof RuntimeException) {
            throw (RuntimeException)jjte001;
          }
          if (jjte001 instanceof ParseException) {
            throw (ParseException)jjte001;
          }
          throw (Error)jjte001;
        } finally {
          if (jjtc001) {
            jjtree.closeNodeScope(jjtn001,  4);
          }
        }
/*@egen*/               
      |/*@bgen(jjtree) #strPrePos( 4) */
        {
          ASTstrPrePos jjtn002 = new ASTstrPrePos(JJTSTRPREPOS);
          boolean jjtc002 = true;
          jjtree.openNodeScope(jjtn002);
        }
        try {
/*@egen*/ ( ( LOOKAHEAD(3) (num_shift() | reg_shift()) | (register() | (number())) ) closeOrCAUp() )/*@bgen(jjtree)*/
        } catch (Throwable jjte002) {
          if (jjtc002) {
            jjtree.clearNodeScope(jjtn002);
            jjtc002 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte002 instanceof RuntimeException) {
            throw (RuntimeException)jjte002;
          }
          if (jjte002 instanceof ParseException) {
            throw (ParseException)jjte002;
          }
          throw (Error)jjte002;
        } finally {
          if (jjtc002) {
            jjtree.closeNodeScope(jjtn002,  4);
          }
        }
/*@egen*/               
      )
   | ( 
        LOOKAHEAD(2)  
        "]" ","
        (/*@bgen(jjtree) #strPostNeg( 3) */
         {
           ASTstrPostNeg jjtn003 = new ASTstrPostNeg(JJTSTRPOSTNEG);
           boolean jjtc003 = true;
           jjtree.openNodeScope(jjtn003);
         }
         try {
/*@egen*/
         ( "-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) )/*@bgen(jjtree)*/
         } catch (Throwable jjte003) {
           if (jjtc003) {
             jjtree.clearNodeScope(jjtn003);
             jjtc003 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte003 instanceof RuntimeException) {
             throw (RuntimeException)jjte003;
           }
           if (jjte003 instanceof ParseException) {
             throw (ParseException)jjte003;
           }
           throw (Error)jjte003;
         } finally {
           if (jjtc003) {
             jjtree.closeNodeScope(jjtn003,  3);
           }
         }
/*@egen*/               
       |/*@bgen(jjtree) #strPostPos( 3) */
         {
           ASTstrPostPos jjtn004 = new ASTstrPostPos(JJTSTRPOSTPOS);
           boolean jjtc004 = true;
           jjtree.openNodeScope(jjtn004);
         }
         try {
/*@egen*/ ( LOOKAHEAD(3)   (num_shift() | reg_shift()) | (register()) | (number()) )/*@bgen(jjtree)*/
         } catch (Throwable jjte004) {
           if (jjtc004) {
             jjtree.clearNodeScope(jjtn004);
             jjtc004 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte004 instanceof RuntimeException) {
             throw (RuntimeException)jjte004;
           }
           if (jjte004 instanceof ParseException) {
             throw (ParseException)jjte004;
           }
           throw (Error)jjte004;
         } finally {
           if (jjtc004) {
             jjtree.closeNodeScope(jjtn004,  3);
           }
         }
/*@egen*/               
        )
        |/*@bgen(jjtree) #strSimple( 3) */
          {
            ASTstrSimple jjtn005 = new ASTstrSimple(JJTSTRSIMPLE);
            boolean jjtc005 = true;
            jjtree.openNodeScope(jjtn005);
          }
          try {
/*@egen*/ closeOrCAUp()/*@bgen(jjtree)*/
          } catch (Throwable jjte005) {
            if (jjtc005) {
              jjtree.clearNodeScope(jjtn005);
              jjtc005 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte005 instanceof RuntimeException) {
              throw (RuntimeException)jjte005;
            }
            if (jjte005 instanceof ParseException) {
              throw (ParseException)jjte005;
            }
            throw (Error)jjte005;
          } finally {
            if (jjtc005) {
              jjtree.closeNodeScope(jjtn005,  3);
            }
          }
/*@egen*/              
     )
    )
  )

 | < B >
  (
     register() "," "[" register()
    (
     ","
      (/*@bgen(jjtree) #strBPreNeg( 4) */
        {
          ASTstrBPreNeg jjtn006 = new ASTstrBPreNeg(JJTSTRBPRENEG);
          boolean jjtc006 = true;
          jjtree.openNodeScope(jjtn006);
        }
        try {
/*@egen*/ 
        ("-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) closeOrCAUp())/*@bgen(jjtree)*/
        } catch (Throwable jjte006) {
          if (jjtc006) {
            jjtree.clearNodeScope(jjtn006);
            jjtc006 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte006 instanceof RuntimeException) {
            throw (RuntimeException)jjte006;
          }
          if (jjte006 instanceof ParseException) {
            throw (ParseException)jjte006;
          }
          throw (Error)jjte006;
        } finally {
          if (jjtc006) {
            jjtree.closeNodeScope(jjtn006,  4);
          }
        }
/*@egen*/                
      |/*@bgen(jjtree) #strBPrePos( 4) */
        {
          ASTstrBPrePos jjtn007 = new ASTstrBPrePos(JJTSTRBPREPOS);
          boolean jjtc007 = true;
          jjtree.openNodeScope(jjtn007);
        }
        try {
/*@egen*/ ( ( LOOKAHEAD(3) (num_shift() | reg_shift()) | (register() | (number())) ) closeOrCAUp() )/*@bgen(jjtree)*/
        } catch (Throwable jjte007) {
          if (jjtc007) {
            jjtree.clearNodeScope(jjtn007);
            jjtc007 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte007 instanceof RuntimeException) {
            throw (RuntimeException)jjte007;
          }
          if (jjte007 instanceof ParseException) {
            throw (ParseException)jjte007;
          }
          throw (Error)jjte007;
        } finally {
          if (jjtc007) {
            jjtree.closeNodeScope(jjtn007,  4);
          }
        }
/*@egen*/                
      )
   | ( 
        LOOKAHEAD(2)  
        "]" ","
        (/*@bgen(jjtree) #strBPostNeg( 3) */
         {
           ASTstrBPostNeg jjtn008 = new ASTstrBPostNeg(JJTSTRBPOSTNEG);
           boolean jjtc008 = true;
           jjtree.openNodeScope(jjtn008);
         }
         try {
/*@egen*/
         ( "-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) )/*@bgen(jjtree)*/
         } catch (Throwable jjte008) {
           if (jjtc008) {
             jjtree.clearNodeScope(jjtn008);
             jjtc008 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte008 instanceof RuntimeException) {
             throw (RuntimeException)jjte008;
           }
           if (jjte008 instanceof ParseException) {
             throw (ParseException)jjte008;
           }
           throw (Error)jjte008;
         } finally {
           if (jjtc008) {
             jjtree.closeNodeScope(jjtn008,  3);
           }
         }
/*@egen*/                
       |/*@bgen(jjtree) #strBPostPos( 3) */
         {
           ASTstrBPostPos jjtn009 = new ASTstrBPostPos(JJTSTRBPOSTPOS);
           boolean jjtc009 = true;
           jjtree.openNodeScope(jjtn009);
         }
         try {
/*@egen*/ ( LOOKAHEAD(3)   (num_shift() | reg_shift()) | (register()) | (number()) )/*@bgen(jjtree)*/
         } catch (Throwable jjte009) {
           if (jjtc009) {
             jjtree.clearNodeScope(jjtn009);
             jjtc009 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte009 instanceof RuntimeException) {
             throw (RuntimeException)jjte009;
           }
           if (jjte009 instanceof ParseException) {
             throw (ParseException)jjte009;
           }
           throw (Error)jjte009;
         } finally {
           if (jjtc009) {
             jjtree.closeNodeScope(jjtn009,  3);
           }
         }
/*@egen*/                
        )
        |/*@bgen(jjtree) #strBSimple( 3) */
          {
            ASTstrBSimple jjtn010 = new ASTstrBSimple(JJTSTRBSIMPLE);
            boolean jjtc010 = true;
            jjtree.openNodeScope(jjtn010);
          }
          try {
/*@egen*/ closeOrCAUp()/*@bgen(jjtree)*/
          } catch (Throwable jjte010) {
            if (jjtc010) {
              jjtree.clearNodeScope(jjtn010);
              jjtc010 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte010 instanceof RuntimeException) {
              throw (RuntimeException)jjte010;
            }
            if (jjte010 instanceof ParseException) {
              throw (ParseException)jjte010;
            }
            throw (Error)jjte010;
          } finally {
            if (jjtc010) {
              jjtree.closeNodeScope(jjtn010,  3);
            }
          }
/*@egen*/               
     )
    )
  )

 | < H >
   (
     register() "," "[" register()
    (
     ","
      (/*@bgen(jjtree) #strHPreNeg( 4) */
        {
          ASTstrHPreNeg jjtn011 = new ASTstrHPreNeg(JJTSTRHPRENEG);
          boolean jjtc011 = true;
          jjtree.openNodeScope(jjtn011);
        }
        try {
/*@egen*/ 
        ("-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) closeOrCAUp())/*@bgen(jjtree)*/
        } catch (Throwable jjte011) {
          if (jjtc011) {
            jjtree.clearNodeScope(jjtn011);
            jjtc011 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte011 instanceof RuntimeException) {
            throw (RuntimeException)jjte011;
          }
          if (jjte011 instanceof ParseException) {
            throw (ParseException)jjte011;
          }
          throw (Error)jjte011;
        } finally {
          if (jjtc011) {
            jjtree.closeNodeScope(jjtn011,  4);
          }
        }
/*@egen*/                
      |/*@bgen(jjtree) #strHPrePos( 4) */
        {
          ASTstrHPrePos jjtn012 = new ASTstrHPrePos(JJTSTRHPREPOS);
          boolean jjtc012 = true;
          jjtree.openNodeScope(jjtn012);
        }
        try {
/*@egen*/ ( ( LOOKAHEAD(3) (num_shift() | reg_shift()) | (register() | (number())) ) closeOrCAUp() )/*@bgen(jjtree)*/
        } catch (Throwable jjte012) {
          if (jjtc012) {
            jjtree.clearNodeScope(jjtn012);
            jjtc012 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte012 instanceof RuntimeException) {
            throw (RuntimeException)jjte012;
          }
          if (jjte012 instanceof ParseException) {
            throw (ParseException)jjte012;
          }
          throw (Error)jjte012;
        } finally {
          if (jjtc012) {
            jjtree.closeNodeScope(jjtn012,  4);
          }
        }
/*@egen*/                
      )
   | ( 
        LOOKAHEAD(2)  
        "]" ","
        (/*@bgen(jjtree) #strHPostNeg( 3) */
         {
           ASTstrHPostNeg jjtn013 = new ASTstrHPostNeg(JJTSTRHPOSTNEG);
           boolean jjtc013 = true;
           jjtree.openNodeScope(jjtn013);
         }
         try {
/*@egen*/
         ( "-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) )/*@bgen(jjtree)*/
         } catch (Throwable jjte013) {
           if (jjtc013) {
             jjtree.clearNodeScope(jjtn013);
             jjtc013 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte013 instanceof RuntimeException) {
             throw (RuntimeException)jjte013;
           }
           if (jjte013 instanceof ParseException) {
             throw (ParseException)jjte013;
           }
           throw (Error)jjte013;
         } finally {
           if (jjtc013) {
             jjtree.closeNodeScope(jjtn013,  3);
           }
         }
/*@egen*/                
       |/*@bgen(jjtree) #strHPostPos( 3) */
         {
           ASTstrHPostPos jjtn014 = new ASTstrHPostPos(JJTSTRHPOSTPOS);
           boolean jjtc014 = true;
           jjtree.openNodeScope(jjtn014);
         }
         try {
/*@egen*/ ( LOOKAHEAD(3)   (num_shift() | reg_shift()) | (register()) | (number()) )/*@bgen(jjtree)*/
         } catch (Throwable jjte014) {
           if (jjtc014) {
             jjtree.clearNodeScope(jjtn014);
             jjtc014 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte014 instanceof RuntimeException) {
             throw (RuntimeException)jjte014;
           }
           if (jjte014 instanceof ParseException) {
             throw (ParseException)jjte014;
           }
           throw (Error)jjte014;
         } finally {
           if (jjtc014) {
             jjtree.closeNodeScope(jjtn014,  3);
           }
         }
/*@egen*/                
        )
        |/*@bgen(jjtree) #strHSimple( 3) */
          {
            ASTstrHSimple jjtn015 = new ASTstrHSimple(JJTSTRHSIMPLE);
            boolean jjtc015 = true;
            jjtree.openNodeScope(jjtn015);
          }
          try {
/*@egen*/ closeOrCAUp()/*@bgen(jjtree)*/
          } catch (Throwable jjte015) {
            if (jjtc015) {
              jjtree.clearNodeScope(jjtn015);
              jjtc015 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte015 instanceof RuntimeException) {
              throw (RuntimeException)jjte015;
            }
            if (jjte015 instanceof ParseException) {
              throw (ParseException)jjte015;
            }
            throw (Error)jjte015;
          } finally {
            if (jjtc015) {
              jjtree.closeNodeScope(jjtn015,  3);
            }
          }
/*@egen*/               
     )
    )
  )
)
 

| cond()
(    
  (
    register() "," "[" register()
    (
     ","
      (/*@bgen(jjtree) #strCPreNeg( 5) */
        {
          ASTstrCPreNeg jjtn016 = new ASTstrCPreNeg(JJTSTRCPRENEG);
          boolean jjtc016 = true;
          jjtree.openNodeScope(jjtn016);
        }
        try {
/*@egen*/ 
        ("-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) closeOrCAUp())/*@bgen(jjtree)*/
        } catch (Throwable jjte016) {
          if (jjtc016) {
            jjtree.clearNodeScope(jjtn016);
            jjtc016 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte016 instanceof RuntimeException) {
            throw (RuntimeException)jjte016;
          }
          if (jjte016 instanceof ParseException) {
            throw (ParseException)jjte016;
          }
          throw (Error)jjte016;
        } finally {
          if (jjtc016) {
            jjtree.closeNodeScope(jjtn016,  5);
          }
        }
/*@egen*/                
      |/*@bgen(jjtree) #strCPrePos( 5) */
        {
          ASTstrCPrePos jjtn017 = new ASTstrCPrePos(JJTSTRCPREPOS);
          boolean jjtc017 = true;
          jjtree.openNodeScope(jjtn017);
        }
        try {
/*@egen*/ ( ( LOOKAHEAD(3) (num_shift() | reg_shift()) | (register() | (number())) ) closeOrCAUp() )/*@bgen(jjtree)*/
        } catch (Throwable jjte017) {
          if (jjtc017) {
            jjtree.clearNodeScope(jjtn017);
            jjtc017 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte017 instanceof RuntimeException) {
            throw (RuntimeException)jjte017;
          }
          if (jjte017 instanceof ParseException) {
            throw (ParseException)jjte017;
          }
          throw (Error)jjte017;
        } finally {
          if (jjtc017) {
            jjtree.closeNodeScope(jjtn017,  5);
          }
        }
/*@egen*/                
      )
   | ( 
        LOOKAHEAD(2)  
        "]" ","
        (/*@bgen(jjtree) #strCPostNeg( 4) */
         {
           ASTstrCPostNeg jjtn018 = new ASTstrCPostNeg(JJTSTRCPOSTNEG);
           boolean jjtc018 = true;
           jjtree.openNodeScope(jjtn018);
         }
         try {
/*@egen*/
         ( "-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) )/*@bgen(jjtree)*/
         } catch (Throwable jjte018) {
           if (jjtc018) {
             jjtree.clearNodeScope(jjtn018);
             jjtc018 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte018 instanceof RuntimeException) {
             throw (RuntimeException)jjte018;
           }
           if (jjte018 instanceof ParseException) {
             throw (ParseException)jjte018;
           }
           throw (Error)jjte018;
         } finally {
           if (jjtc018) {
             jjtree.closeNodeScope(jjtn018,  4);
           }
         }
/*@egen*/                
       |/*@bgen(jjtree) #strCPostPos( 4) */
         {
           ASTstrCPostPos jjtn019 = new ASTstrCPostPos(JJTSTRCPOSTPOS);
           boolean jjtc019 = true;
           jjtree.openNodeScope(jjtn019);
         }
         try {
/*@egen*/ ( LOOKAHEAD(3)   (num_shift() | reg_shift()) | (register()) | (number()) )/*@bgen(jjtree)*/
         } catch (Throwable jjte019) {
           if (jjtc019) {
             jjtree.clearNodeScope(jjtn019);
             jjtc019 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte019 instanceof RuntimeException) {
             throw (RuntimeException)jjte019;
           }
           if (jjte019 instanceof ParseException) {
             throw (ParseException)jjte019;
           }
           throw (Error)jjte019;
         } finally {
           if (jjtc019) {
             jjtree.closeNodeScope(jjtn019,  4);
           }
         }
/*@egen*/                
        )
        |/*@bgen(jjtree) #strCSimple( 4) */
          {
            ASTstrCSimple jjtn020 = new ASTstrCSimple(JJTSTRCSIMPLE);
            boolean jjtc020 = true;
            jjtree.openNodeScope(jjtn020);
          }
          try {
/*@egen*/ closeOrCAUp()/*@bgen(jjtree)*/
          } catch (Throwable jjte020) {
            if (jjtc020) {
              jjtree.clearNodeScope(jjtn020);
              jjtc020 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte020 instanceof RuntimeException) {
              throw (RuntimeException)jjte020;
            }
            if (jjte020 instanceof ParseException) {
              throw (ParseException)jjte020;
            }
            throw (Error)jjte020;
          } finally {
            if (jjtc020) {
              jjtree.closeNodeScope(jjtn020,  4);
            }
          }
/*@egen*/               
     )
    )
  )

 | < B >
  (
     register() "," "[" register()
    (
     ","
      (/*@bgen(jjtree) #strCBPreNeg( 5) */
        {
          ASTstrCBPreNeg jjtn021 = new ASTstrCBPreNeg(JJTSTRCBPRENEG);
          boolean jjtc021 = true;
          jjtree.openNodeScope(jjtn021);
        }
        try {
/*@egen*/ 
        ("-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) closeOrCAUp())/*@bgen(jjtree)*/
        } catch (Throwable jjte021) {
          if (jjtc021) {
            jjtree.clearNodeScope(jjtn021);
            jjtc021 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte021 instanceof RuntimeException) {
            throw (RuntimeException)jjte021;
          }
          if (jjte021 instanceof ParseException) {
            throw (ParseException)jjte021;
          }
          throw (Error)jjte021;
        } finally {
          if (jjtc021) {
            jjtree.closeNodeScope(jjtn021,  5);
          }
        }
/*@egen*/                 
      |/*@bgen(jjtree) #strCBPrePos( 5) */
        {
          ASTstrCBPrePos jjtn022 = new ASTstrCBPrePos(JJTSTRCBPREPOS);
          boolean jjtc022 = true;
          jjtree.openNodeScope(jjtn022);
        }
        try {
/*@egen*/ ( ( LOOKAHEAD(3) (num_shift() | reg_shift()) | (register() | (number())) ) closeOrCAUp() )/*@bgen(jjtree)*/
        } catch (Throwable jjte022) {
          if (jjtc022) {
            jjtree.clearNodeScope(jjtn022);
            jjtc022 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte022 instanceof RuntimeException) {
            throw (RuntimeException)jjte022;
          }
          if (jjte022 instanceof ParseException) {
            throw (ParseException)jjte022;
          }
          throw (Error)jjte022;
        } finally {
          if (jjtc022) {
            jjtree.closeNodeScope(jjtn022,  5);
          }
        }
/*@egen*/                 
      )
   | ( 
        LOOKAHEAD(2)  
        "]" ","
        (/*@bgen(jjtree) #strCBPostNeg( 4) */
         {
           ASTstrCBPostNeg jjtn023 = new ASTstrCBPostNeg(JJTSTRCBPOSTNEG);
           boolean jjtc023 = true;
           jjtree.openNodeScope(jjtn023);
         }
         try {
/*@egen*/
         ( "-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) )/*@bgen(jjtree)*/
         } catch (Throwable jjte023) {
           if (jjtc023) {
             jjtree.clearNodeScope(jjtn023);
             jjtc023 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte023 instanceof RuntimeException) {
             throw (RuntimeException)jjte023;
           }
           if (jjte023 instanceof ParseException) {
             throw (ParseException)jjte023;
           }
           throw (Error)jjte023;
         } finally {
           if (jjtc023) {
             jjtree.closeNodeScope(jjtn023,  4);
           }
         }
/*@egen*/                 
       |/*@bgen(jjtree) #strCBPostPos( 4) */
         {
           ASTstrCBPostPos jjtn024 = new ASTstrCBPostPos(JJTSTRCBPOSTPOS);
           boolean jjtc024 = true;
           jjtree.openNodeScope(jjtn024);
         }
         try {
/*@egen*/ ( LOOKAHEAD(3)   (num_shift() | reg_shift()) | (register()) | (number()) )/*@bgen(jjtree)*/
         } catch (Throwable jjte024) {
           if (jjtc024) {
             jjtree.clearNodeScope(jjtn024);
             jjtc024 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte024 instanceof RuntimeException) {
             throw (RuntimeException)jjte024;
           }
           if (jjte024 instanceof ParseException) {
             throw (ParseException)jjte024;
           }
           throw (Error)jjte024;
         } finally {
           if (jjtc024) {
             jjtree.closeNodeScope(jjtn024,  4);
           }
         }
/*@egen*/                 
        )
        |/*@bgen(jjtree) #strCBSimple( 4) */
          {
            ASTstrCBSimple jjtn025 = new ASTstrCBSimple(JJTSTRCBSIMPLE);
            boolean jjtc025 = true;
            jjtree.openNodeScope(jjtn025);
          }
          try {
/*@egen*/ closeOrCAUp()/*@bgen(jjtree)*/
          } catch (Throwable jjte025) {
            if (jjtc025) {
              jjtree.clearNodeScope(jjtn025);
              jjtc025 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte025 instanceof RuntimeException) {
              throw (RuntimeException)jjte025;
            }
            if (jjte025 instanceof ParseException) {
              throw (ParseException)jjte025;
            }
            throw (Error)jjte025;
          } finally {
            if (jjtc025) {
              jjtree.closeNodeScope(jjtn025,  4);
            }
          }
/*@egen*/                
     )
    )
  )

 | < H >
   (
     register() "," "[" register()
    (
     ","
      (/*@bgen(jjtree) #strCHPreNeg( 5) */
        {
          ASTstrCHPreNeg jjtn026 = new ASTstrCHPreNeg(JJTSTRCHPRENEG);
          boolean jjtc026 = true;
          jjtree.openNodeScope(jjtn026);
        }
        try {
/*@egen*/ 
        ("-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) closeOrCAUp())/*@bgen(jjtree)*/
        } catch (Throwable jjte026) {
          if (jjtc026) {
            jjtree.clearNodeScope(jjtn026);
            jjtc026 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte026 instanceof RuntimeException) {
            throw (RuntimeException)jjte026;
          }
          if (jjte026 instanceof ParseException) {
            throw (ParseException)jjte026;
          }
          throw (Error)jjte026;
        } finally {
          if (jjtc026) {
            jjtree.closeNodeScope(jjtn026,  5);
          }
        }
/*@egen*/                 
      |/*@bgen(jjtree) #strCHPrePos( 5) */
        {
          ASTstrCHPrePos jjtn027 = new ASTstrCHPrePos(JJTSTRCHPREPOS);
          boolean jjtc027 = true;
          jjtree.openNodeScope(jjtn027);
        }
        try {
/*@egen*/ ( ( LOOKAHEAD(3) (num_shift() | reg_shift()) | (register() | (number())) ) closeOrCAUp() )/*@bgen(jjtree)*/
        } catch (Throwable jjte027) {
          if (jjtc027) {
            jjtree.clearNodeScope(jjtn027);
            jjtc027 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte027 instanceof RuntimeException) {
            throw (RuntimeException)jjte027;
          }
          if (jjte027 instanceof ParseException) {
            throw (ParseException)jjte027;
          }
          throw (Error)jjte027;
        } finally {
          if (jjtc027) {
            jjtree.closeNodeScope(jjtn027,  5);
          }
        }
/*@egen*/                 
      )
   | ( 
        LOOKAHEAD(2)  
        "]" ","
        (/*@bgen(jjtree) #strCHPostNeg( 4) */
         {
           ASTstrCHPostNeg jjtn028 = new ASTstrCHPostNeg(JJTSTRCHPOSTNEG);
           boolean jjtc028 = true;
           jjtree.openNodeScope(jjtn028);
         }
         try {
/*@egen*/
         ( "-" ( LOOKAHEAD(2) (num_shift() | reg_shift()) | (register()) ) )/*@bgen(jjtree)*/
         } catch (Throwable jjte028) {
           if (jjtc028) {
             jjtree.clearNodeScope(jjtn028);
             jjtc028 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte028 instanceof RuntimeException) {
             throw (RuntimeException)jjte028;
           }
           if (jjte028 instanceof ParseException) {
             throw (ParseException)jjte028;
           }
           throw (Error)jjte028;
         } finally {
           if (jjtc028) {
             jjtree.closeNodeScope(jjtn028,  4);
           }
         }
/*@egen*/                 
       |/*@bgen(jjtree) #strCHPostPos( 4) */
         {
           ASTstrCHPostPos jjtn029 = new ASTstrCHPostPos(JJTSTRCHPOSTPOS);
           boolean jjtc029 = true;
           jjtree.openNodeScope(jjtn029);
         }
         try {
/*@egen*/ ( LOOKAHEAD(3)   (num_shift() | reg_shift()) | (register()) | (number()) )/*@bgen(jjtree)*/
         } catch (Throwable jjte029) {
           if (jjtc029) {
             jjtree.clearNodeScope(jjtn029);
             jjtc029 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte029 instanceof RuntimeException) {
             throw (RuntimeException)jjte029;
           }
           if (jjte029 instanceof ParseException) {
             throw (ParseException)jjte029;
           }
           throw (Error)jjte029;
         } finally {
           if (jjtc029) {
             jjtree.closeNodeScope(jjtn029,  4);
           }
         }
/*@egen*/                 
        )
        |/*@bgen(jjtree) #strCHSimple( 4) */
          {
            ASTstrCHSimple jjtn030 = new ASTstrCHSimple(JJTSTRCHSIMPLE);
            boolean jjtc030 = true;
            jjtree.openNodeScope(jjtn030);
          }
          try {
/*@egen*/ closeOrCAUp()/*@bgen(jjtree)*/
          } catch (Throwable jjte030) {
            if (jjtc030) {
              jjtree.clearNodeScope(jjtn030);
              jjtc030 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte030 instanceof RuntimeException) {
              throw (RuntimeException)jjte030;
            }
            if (jjte030 instanceof ParseException) {
              throw (ParseException)jjte030;
            }
            throw (Error)jjte030;
          } finally {
            if (jjtc030) {
              jjtree.closeNodeScope(jjtn030,  4);
            }
          }
/*@egen*/                
     )
    )
  ) 
 )
)
}

void ldm()      :
{}
{
  < LDM >
(
  (LOOKAHEAD(6)
   ldmEnums()
 | amode() register() 
    ("," "{" register()
     (/*@bgen(jjtree) #ldmSimple( 3) */
      {
        ASTldmSimple jjtn001 = new ASTldmSimple(JJTLDMSIMPLE);
        boolean jjtc001 = true;
        jjtree.openNodeScope(jjtn001);
      }
      try {
/*@egen*/ 
      (LOOKAHEAD(2) ("}") | ("}" "^"))/*@bgen(jjtree)*/
      } finally {
        if (jjtc001) {
          jjtree.closeNodeScope(jjtn001,  3);
        }
      }
/*@egen*/               
    |/*@bgen(jjtree) #ldmList( 4) */
      {
        ASTldmList jjtn002 = new ASTldmList(JJTLDMLIST);
        boolean jjtc002 = true;
        jjtree.openNodeScope(jjtn002);
      }
      try {
/*@egen*/ (LOOKAHEAD(4) ("-" register() "}") | ( "-" register() "}" "^"))/*@bgen(jjtree)*/
      } catch (Throwable jjte002) {
        if (jjtc002) {
          jjtree.clearNodeScope(jjtn002);
          jjtc002 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte002 instanceof RuntimeException) {
          throw (RuntimeException)jjte002;
        }
        if (jjte002 instanceof ParseException) {
          throw (ParseException)jjte002;
        }
        throw (Error)jjte002;
      } finally {
        if (jjtc002) {
          jjtree.closeNodeScope(jjtn002,  4);
        }
      }
/*@egen*/            
     )
	| "!" "," "{" register()
	 (/*@bgen(jjtree) #MldmSimple( 3) */
      {
        ASTMldmSimple jjtn003 = new ASTMldmSimple(JJTMLDMSIMPLE);
        boolean jjtc003 = true;
        jjtree.openNodeScope(jjtn003);
      }
      try {
/*@egen*/
      (LOOKAHEAD(2) ("}") | ("}" "^"))/*@bgen(jjtree)*/
      } finally {
        if (jjtc003) {
          jjtree.closeNodeScope(jjtn003,  3);
        }
      }
/*@egen*/               
    |/*@bgen(jjtree) #MldmList( 4) */
      {
        ASTMldmList jjtn004 = new ASTMldmList(JJTMLDMLIST);
        boolean jjtc004 = true;
        jjtree.openNodeScope(jjtn004);
      }
      try {
/*@egen*/ (LOOKAHEAD(4) ("-" register() "}") | ("-" register() "}" "^"))/*@bgen(jjtree)*/
      } catch (Throwable jjte004) {
        if (jjtc004) {
          jjtree.clearNodeScope(jjtn004);
          jjtc004 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte004 instanceof RuntimeException) {
          throw (RuntimeException)jjte004;
        }
        if (jjte004 instanceof ParseException) {
          throw (ParseException)jjte004;
        }
        throw (Error)jjte004;
      } finally {
        if (jjtc004) {
          jjtree.closeNodeScope(jjtn004,  4);
        }
      }
/*@egen*/             
      )
     )
   )
|(LOOKAHEAD(7)
  ldmCEnums()
| cond() amode() register()
 ("," "{" register()
     (/*@bgen(jjtree) #ldmCSimple( 4) */
      {
        ASTldmCSimple jjtn005 = new ASTldmCSimple(JJTLDMCSIMPLE);
        boolean jjtc005 = true;
        jjtree.openNodeScope(jjtn005);
      }
      try {
/*@egen*/ 
      (LOOKAHEAD(2) ("}") | ("}" "^"))/*@bgen(jjtree)*/
      } finally {
        if (jjtc005) {
          jjtree.closeNodeScope(jjtn005,  4);
        }
      }
/*@egen*/               
    |/*@bgen(jjtree) #ldmCList( 5) */
      {
        ASTldmCList jjtn006 = new ASTldmCList(JJTLDMCLIST);
        boolean jjtc006 = true;
        jjtree.openNodeScope(jjtn006);
      }
      try {
/*@egen*/ (LOOKAHEAD(4) ("-" register() "}") | ( "-" register() "}" "^"))/*@bgen(jjtree)*/
      } catch (Throwable jjte006) {
        if (jjtc006) {
          jjtree.clearNodeScope(jjtn006);
          jjtc006 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte006 instanceof RuntimeException) {
          throw (RuntimeException)jjte006;
        }
        if (jjte006 instanceof ParseException) {
          throw (ParseException)jjte006;
        }
        throw (Error)jjte006;
      } finally {
        if (jjtc006) {
          jjtree.closeNodeScope(jjtn006,  5);
        }
      }
/*@egen*/             
     )
	| "!" "," "{" register()
	 (/*@bgen(jjtree) #MldmCSimple( 4) */
      {
        ASTMldmCSimple jjtn007 = new ASTMldmCSimple(JJTMLDMCSIMPLE);
        boolean jjtc007 = true;
        jjtree.openNodeScope(jjtn007);
      }
      try {
/*@egen*/
      (LOOKAHEAD(2) ("}") | ("}" "^"))/*@bgen(jjtree)*/
      } finally {
        if (jjtc007) {
          jjtree.closeNodeScope(jjtn007,  4);
        }
      }
/*@egen*/                
    |/*@bgen(jjtree) #MldmCList( 5) */
      {
        ASTMldmCList jjtn008 = new ASTMldmCList(JJTMLDMCLIST);
        boolean jjtc008 = true;
        jjtree.openNodeScope(jjtn008);
      }
      try {
/*@egen*/ (LOOKAHEAD(4) ("-" register() "}") | ("-" register() "}" "^"))/*@bgen(jjtree)*/
      } catch (Throwable jjte008) {
        if (jjtc008) {
          jjtree.clearNodeScope(jjtn008);
          jjtc008 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte008 instanceof RuntimeException) {
          throw (RuntimeException)jjte008;
        }
        if (jjte008 instanceof ParseException) {
          throw (ParseException)jjte008;
        }
        throw (Error)jjte008;
      } finally {
        if (jjtc008) {
          jjtree.closeNodeScope(jjtn008,  5);
        }
      }
/*@egen*/              
      )
     )
   )   )
}

void ldmEnums()      :
{}
{
 LOOKAHEAD(4)/*@bgen(jjtree) MldmEnum */
  {
    ASTMldmEnum jjtn001 = new ASTMldmEnum(JJTMLDMENUM);
    boolean jjtc001 = true;
    jjtree.openNodeScope(jjtn001);
  }
  try {
/*@egen*/ 
  (amode() register() "!" "," "{" register() ( LOOKAHEAD(3)( ("," register())+ "}") | ( ("," register())+ "}" "^")) )/*@bgen(jjtree)*/
  } catch (Throwable jjte001) {
    if (jjtc001) {
      jjtree.clearNodeScope(jjtn001);
      jjtc001 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte001 instanceof RuntimeException) {
      throw (RuntimeException)jjte001;
    }
    if (jjte001 instanceof ParseException) {
      throw (ParseException)jjte001;
    }
    throw (Error)jjte001;
  } finally {
    if (jjtc001) {
      jjtree.closeNodeScope(jjtn001, true);
    }
  }
/*@egen*/          
|/*@bgen(jjtree) ldmEnum */
  {
    ASTldmEnum jjtn002 = new ASTldmEnum(JJTLDMENUM);
    boolean jjtc002 = true;
    jjtree.openNodeScope(jjtn002);
  }
  try {
/*@egen*/ (amode() register() "," "{" register() ( LOOKAHEAD(3)( ("," register())+ "}") | ( ("," register())+ "}" "^")) )/*@bgen(jjtree)*/
  } catch (Throwable jjte002) {
    if (jjtc002) {
      jjtree.clearNodeScope(jjtn002);
      jjtc002 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte002 instanceof RuntimeException) {
      throw (RuntimeException)jjte002;
    }
    if (jjte002 instanceof ParseException) {
      throw (ParseException)jjte002;
    }
    throw (Error)jjte002;
  } finally {
    if (jjtc002) {
      jjtree.closeNodeScope(jjtn002, true);
    }
  }
/*@egen*/         
}

void ldmCEnums()      :
{}
{
 LOOKAHEAD(4)/*@bgen(jjtree) ldmCEnum */
 {
   ASTldmCEnum jjtn001 = new ASTldmCEnum(JJTLDMCENUM);
   boolean jjtc001 = true;
   jjtree.openNodeScope(jjtn001);
 }
 try {
/*@egen*/
 (cond() amode() register() "," "{" register() ( LOOKAHEAD(3)( ("," register())+ "}") | ( ("," register())+ "}" "^")) )/*@bgen(jjtree)*/
 } catch (Throwable jjte001) {
   if (jjtc001) {
     jjtree.clearNodeScope(jjtn001);
     jjtc001 = false;
   } else {
     jjtree.popNode();
   }
   if (jjte001 instanceof RuntimeException) {
     throw (RuntimeException)jjte001;
   }
   if (jjte001 instanceof ParseException) {
     throw (ParseException)jjte001;
   }
   throw (Error)jjte001;
 } finally {
   if (jjtc001) {
     jjtree.closeNodeScope(jjtn001, true);
   }
 }
/*@egen*/          
|/*@bgen(jjtree) MldmCEnum */
 {
   ASTMldmCEnum jjtn002 = new ASTMldmCEnum(JJTMLDMCENUM);
   boolean jjtc002 = true;
   jjtree.openNodeScope(jjtn002);
 }
 try {
/*@egen*/(cond() amode() register() "!" "," "{" register() ( LOOKAHEAD(3)( ("," register())+ "}") | ( ("," register())+ "}" "^")) )/*@bgen(jjtree)*/
 } catch (Throwable jjte002) {
   if (jjtc002) {
     jjtree.clearNodeScope(jjtn002);
     jjtc002 = false;
   } else {
     jjtree.popNode();
   }
   if (jjte002 instanceof RuntimeException) {
     throw (RuntimeException)jjte002;
   }
   if (jjte002 instanceof ParseException) {
     throw (ParseException)jjte002;
   }
   throw (Error)jjte002;
 } finally {
   if (jjtc002) {
     jjtree.closeNodeScope(jjtn002, true);
   }
 }
/*@egen*/           
}

void stm()      :
{}
{
  < STM >
(
  ( LOOKAHEAD(6)
    stmEnums()  | amode() register()
    ("," "{" register()
     (/*@bgen(jjtree) #stmSimple( 3) */
      {
        ASTstmSimple jjtn001 = new ASTstmSimple(JJTSTMSIMPLE);
        boolean jjtc001 = true;
        jjtree.openNodeScope(jjtn001);
      }
      try {
/*@egen*/ 
      (LOOKAHEAD(2) ("}") | ("}" "^"))/*@bgen(jjtree)*/
      } finally {
        if (jjtc001) {
          jjtree.closeNodeScope(jjtn001,  3);
        }
      }
/*@egen*/              
    |/*@bgen(jjtree) #stmList( 4) */
      {
        ASTstmList jjtn002 = new ASTstmList(JJTSTMLIST);
        boolean jjtc002 = true;
        jjtree.openNodeScope(jjtn002);
      }
      try {
/*@egen*/ (LOOKAHEAD(4) ("-" register() "}") | ( "-" register() "}" "^"))/*@bgen(jjtree)*/
      } catch (Throwable jjte002) {
        if (jjtc002) {
          jjtree.clearNodeScope(jjtn002);
          jjtc002 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte002 instanceof RuntimeException) {
          throw (RuntimeException)jjte002;
        }
        if (jjte002 instanceof ParseException) {
          throw (ParseException)jjte002;
        }
        throw (Error)jjte002;
      } finally {
        if (jjtc002) {
          jjtree.closeNodeScope(jjtn002,  4);
        }
      }
/*@egen*/            
     )
	| "!" "," "{" register()
	 (/*@bgen(jjtree) #MstmSimple( 3) */
      {
        ASTMstmSimple jjtn003 = new ASTMstmSimple(JJTMSTMSIMPLE);
        boolean jjtc003 = true;
        jjtree.openNodeScope(jjtn003);
      }
      try {
/*@egen*/
      (LOOKAHEAD(2) ("}") | ("}" "^"))/*@bgen(jjtree)*/
      } finally {
        if (jjtc003) {
          jjtree.closeNodeScope(jjtn003,  3);
        }
      }
/*@egen*/               
    |/*@bgen(jjtree) #MstmList( 4) */
      {
        ASTMstmList jjtn004 = new ASTMstmList(JJTMSTMLIST);
        boolean jjtc004 = true;
        jjtree.openNodeScope(jjtn004);
      }
      try {
/*@egen*/ (LOOKAHEAD(4) ("-" register() "}") | ("-" register() "}" "^"))/*@bgen(jjtree)*/
      } catch (Throwable jjte004) {
        if (jjtc004) {
          jjtree.clearNodeScope(jjtn004);
          jjtc004 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte004 instanceof RuntimeException) {
          throw (RuntimeException)jjte004;
        }
        if (jjte004 instanceof ParseException) {
          throw (ParseException)jjte004;
        }
        throw (Error)jjte004;
      } finally {
        if (jjtc004) {
          jjtree.closeNodeScope(jjtn004,  4);
        }
      }
/*@egen*/             
      )
     )
   )
   
 | (LOOKAHEAD(7)
   stmCEnums()
 | cond() amode() register()
 ("," "{" register()
     (/*@bgen(jjtree) #stmCSimple( 4) */
      {
        ASTstmCSimple jjtn005 = new ASTstmCSimple(JJTSTMCSIMPLE);
        boolean jjtc005 = true;
        jjtree.openNodeScope(jjtn005);
      }
      try {
/*@egen*/ 
      (LOOKAHEAD(2) ("}") | ("}" "^"))/*@bgen(jjtree)*/
      } finally {
        if (jjtc005) {
          jjtree.closeNodeScope(jjtn005,  4);
        }
      }
/*@egen*/               
    |/*@bgen(jjtree) #stmCList( 5) */
      {
        ASTstmCList jjtn006 = new ASTstmCList(JJTSTMCLIST);
        boolean jjtc006 = true;
        jjtree.openNodeScope(jjtn006);
      }
      try {
/*@egen*/ (LOOKAHEAD(4) ("-" register() "}") | ( "-" register() "}" "^"))/*@bgen(jjtree)*/
      } catch (Throwable jjte006) {
        if (jjtc006) {
          jjtree.clearNodeScope(jjtn006);
          jjtc006 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte006 instanceof RuntimeException) {
          throw (RuntimeException)jjte006;
        }
        if (jjte006 instanceof ParseException) {
          throw (ParseException)jjte006;
        }
        throw (Error)jjte006;
      } finally {
        if (jjtc006) {
          jjtree.closeNodeScope(jjtn006,  5);
        }
      }
/*@egen*/             
     )
	| "!" "," "{" register()
	 (/*@bgen(jjtree) #MstmCSimple( 4) */
      {
        ASTMstmCSimple jjtn007 = new ASTMstmCSimple(JJTMSTMCSIMPLE);
        boolean jjtc007 = true;
        jjtree.openNodeScope(jjtn007);
      }
      try {
/*@egen*/
      (LOOKAHEAD(2) ("}") | ("}" "^"))/*@bgen(jjtree)*/
      } finally {
        if (jjtc007) {
          jjtree.closeNodeScope(jjtn007,  4);
        }
      }
/*@egen*/                
    |/*@bgen(jjtree) #MstmCList( 5) */
      {
        ASTMstmCList jjtn008 = new ASTMstmCList(JJTMSTMCLIST);
        boolean jjtc008 = true;
        jjtree.openNodeScope(jjtn008);
      }
      try {
/*@egen*/ (LOOKAHEAD(4) ("-" register() "}") | ("-" register() "}" "^"))/*@bgen(jjtree)*/
      } catch (Throwable jjte008) {
        if (jjtc008) {
          jjtree.clearNodeScope(jjtn008);
          jjtc008 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte008 instanceof RuntimeException) {
          throw (RuntimeException)jjte008;
        }
        if (jjte008 instanceof ParseException) {
          throw (ParseException)jjte008;
        }
        throw (Error)jjte008;
      } finally {
        if (jjtc008) {
          jjtree.closeNodeScope(jjtn008,  5);
        }
      }
/*@egen*/              
      )
     )
   )  
)
}

void stmEnums()      :
{}
{
 LOOKAHEAD(4)/*@bgen(jjtree) MstmEnum */
  {
    ASTMstmEnum jjtn001 = new ASTMstmEnum(JJTMSTMENUM);
    boolean jjtc001 = true;
    jjtree.openNodeScope(jjtn001);
  }
  try {
/*@egen*/ 
  (amode() register() "!" "," "{" register() ( LOOKAHEAD(3)( ("," register() )+ "}") | ( ("," register())+ "}" "^")) )/*@bgen(jjtree)*/
  } catch (Throwable jjte001) {
    if (jjtc001) {
      jjtree.clearNodeScope(jjtn001);
      jjtc001 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte001 instanceof RuntimeException) {
      throw (RuntimeException)jjte001;
    }
    if (jjte001 instanceof ParseException) {
      throw (ParseException)jjte001;
    }
    throw (Error)jjte001;
  } finally {
    if (jjtc001) {
      jjtree.closeNodeScope(jjtn001, true);
    }
  }
/*@egen*/          
|/*@bgen(jjtree) stmEnum */
  {
    ASTstmEnum jjtn002 = new ASTstmEnum(JJTSTMENUM);
    boolean jjtc002 = true;
    jjtree.openNodeScope(jjtn002);
  }
  try {
/*@egen*/ (amode() register() "," "{" register() ( LOOKAHEAD(3)( ("," register())+ "}") | ( ("," register())+ "}" "^")) )/*@bgen(jjtree)*/
  } catch (Throwable jjte002) {
    if (jjtc002) {
      jjtree.clearNodeScope(jjtn002);
      jjtc002 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte002 instanceof RuntimeException) {
      throw (RuntimeException)jjte002;
    }
    if (jjte002 instanceof ParseException) {
      throw (ParseException)jjte002;
    }
    throw (Error)jjte002;
  } finally {
    if (jjtc002) {
      jjtree.closeNodeScope(jjtn002, true);
    }
  }
/*@egen*/         
}

void stmCEnums()      :
{}
{
 LOOKAHEAD(4)/*@bgen(jjtree) stmCEnum */
 {
   ASTstmCEnum jjtn001 = new ASTstmCEnum(JJTSTMCENUM);
   boolean jjtc001 = true;
   jjtree.openNodeScope(jjtn001);
 }
 try {
/*@egen*/
 (cond() amode() register() "," "{" register() ( LOOKAHEAD(3)( ("," register())+ "}") | ( ("," register())+ "}" "^")) )/*@bgen(jjtree)*/
 } catch (Throwable jjte001) {
   if (jjtc001) {
     jjtree.clearNodeScope(jjtn001);
     jjtc001 = false;
   } else {
     jjtree.popNode();
   }
   if (jjte001 instanceof RuntimeException) {
     throw (RuntimeException)jjte001;
   }
   if (jjte001 instanceof ParseException) {
     throw (ParseException)jjte001;
   }
   throw (Error)jjte001;
 } finally {
   if (jjtc001) {
     jjtree.closeNodeScope(jjtn001, true);
   }
 }
/*@egen*/          
|/*@bgen(jjtree) MstmCEnum */
 {
   ASTMstmCEnum jjtn002 = new ASTMstmCEnum(JJTMSTMCENUM);
   boolean jjtc002 = true;
   jjtree.openNodeScope(jjtn002);
 }
 try {
/*@egen*/(cond() amode() register() "!" "," "{" register() ( LOOKAHEAD(3)( ("," register())+ "}") | ( ("," register())+ "}" "^")) )/*@bgen(jjtree)*/
 } catch (Throwable jjte002) {
   if (jjtc002) {
     jjtree.clearNodeScope(jjtn002);
     jjtc002 = false;
   } else {
     jjtree.popNode();
   }
   if (jjte002 instanceof RuntimeException) {
     throw (RuntimeException)jjte002;
   }
   if (jjte002 instanceof ParseException) {
     throw (ParseException)jjte002;
   }
   throw (Error)jjte002;
 } finally {
   if (jjtc002) {
     jjtree.closeNodeScope(jjtn002, true);
   }
 }
/*@egen*/           
}

void swp()      :
{}
{
  <SWP>
(/*@bgen(jjtree) #swp( 3) */
  {
    ASTswp jjtn001 = new ASTswp(JJTSWP);
    boolean jjtc001 = true;
    jjtree.openNodeScope(jjtn001);
  }
  try {
/*@egen*/
  (register() "," register() "," "[" register() "]")/*@bgen(jjtree)*/
  } catch (Throwable jjte001) {
    if (jjtc001) {
      jjtree.clearNodeScope(jjtn001);
      jjtc001 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte001 instanceof RuntimeException) {
      throw (RuntimeException)jjte001;
    }
    if (jjte001 instanceof ParseException) {
      throw (ParseException)jjte001;
    }
    throw (Error)jjte001;
  } finally {
    if (jjtc001) {
      jjtree.closeNodeScope(jjtn001,  3);
    }
  }
/*@egen*/        
|/*@bgen(jjtree) #swpb( 3) */
  {
    ASTswpb jjtn002 = new ASTswpb(JJTSWPB);
    boolean jjtc002 = true;
    jjtree.openNodeScope(jjtn002);
  }
  try {
/*@egen*/ (<B> register() "," register() "," "[" register() "]")/*@bgen(jjtree)*/
  } catch (Throwable jjte002) {
    if (jjtc002) {
      jjtree.clearNodeScope(jjtn002);
      jjtc002 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte002 instanceof RuntimeException) {
      throw (RuntimeException)jjte002;
    }
    if (jjte002 instanceof ParseException) {
      throw (ParseException)jjte002;
    }
    throw (Error)jjte002;
  } finally {
    if (jjtc002) {
      jjtree.closeNodeScope(jjtn002,  3);
    }
  }
/*@egen*/         
| cond()
  (/*@bgen(jjtree) #swpC( 4) */
    {
      ASTswpC jjtn003 = new ASTswpC(JJTSWPC);
      boolean jjtc003 = true;
      jjtree.openNodeScope(jjtn003);
    }
    try {
/*@egen*/
    (register() "," register() "," "[" register() "]")/*@bgen(jjtree)*/
    } catch (Throwable jjte003) {
      if (jjtc003) {
        jjtree.clearNodeScope(jjtn003);
        jjtc003 = false;
      } else {
        jjtree.popNode();
      }
      if (jjte003 instanceof RuntimeException) {
        throw (RuntimeException)jjte003;
      }
      if (jjte003 instanceof ParseException) {
        throw (ParseException)jjte003;
      }
      throw (Error)jjte003;
    } finally {
      if (jjtc003) {
        jjtree.closeNodeScope(jjtn003,  4);
      }
    }
/*@egen*/         
|/*@bgen(jjtree) #swpCB( 4) */
  {
    ASTswpCB jjtn004 = new ASTswpCB(JJTSWPCB);
    boolean jjtc004 = true;
    jjtree.openNodeScope(jjtn004);
  }
  try {
/*@egen*/ (<B> register() "," register() "," "[" register() "]")/*@bgen(jjtree)*/
  } catch (Throwable jjte004) {
    if (jjtc004) {
      jjtree.clearNodeScope(jjtn004);
      jjtc004 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte004 instanceof RuntimeException) {
      throw (RuntimeException)jjte004;
    }
    if (jjte004 instanceof ParseException) {
      throw (ParseException)jjte004;
    }
    throw (Error)jjte004;
  } finally {
    if (jjtc004) {
      jjtree.closeNodeScope(jjtn004,  4);
    }
  }
/*@egen*/            )  )
}

void branch()      :
{}
{ < B >
(/*@bgen(jjtree) #Cbranch( 2) */
  {
    ASTCbranch jjtn001 = new ASTCbranch(JJTCBRANCH);
    boolean jjtc001 = true;
    jjtree.openNodeScope(jjtn001);
  }
  try {
/*@egen*/
  ( cond() label())/*@bgen(jjtree)*/
  } catch (Throwable jjte001) {
    if (jjtc001) {
      jjtree.clearNodeScope(jjtn001);
      jjtc001 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte001 instanceof RuntimeException) {
      throw (RuntimeException)jjte001;
    }
    if (jjte001 instanceof ParseException) {
      throw (ParseException)jjte001;
    }
    throw (Error)jjte001;
  } finally {
    if (jjtc001) {
      jjtree.closeNodeScope(jjtn001,  2);
    }
  }
/*@egen*/            
|/*@bgen(jjtree) #branch( 1) */
  {
    ASTbranch jjtn002 = new ASTbranch(JJTBRANCH);
    boolean jjtc002 = true;
    jjtree.openNodeScope(jjtn002);
  }
  try {
/*@egen*/ ( label())/*@bgen(jjtree)*/
  } catch (Throwable jjte002) {
    if (jjtc002) {
      jjtree.clearNodeScope(jjtn002);
      jjtc002 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte002 instanceof RuntimeException) {
      throw (RuntimeException)jjte002;
    }
    if (jjte002 instanceof ParseException) {
      throw (ParseException)jjte002;
    }
    throw (Error)jjte002;
  } finally {
    if (jjtc002) {
      jjtree.closeNodeScope(jjtn002,  1);
    }
  }
/*@egen*/           
)
}

void branchLink()      :
{}
{ < B > < L >
(/*@bgen(jjtree) #CbranchLink( 2) */
  {
    ASTCbranchLink jjtn001 = new ASTCbranchLink(JJTCBRANCHLINK);
    boolean jjtc001 = true;
    jjtree.openNodeScope(jjtn001);
  }
  try {
/*@egen*/
  ( cond() label())/*@bgen(jjtree)*/
  } catch (Throwable jjte001) {
    if (jjtc001) {
      jjtree.clearNodeScope(jjtn001);
      jjtc001 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte001 instanceof RuntimeException) {
      throw (RuntimeException)jjte001;
    }
    if (jjte001 instanceof ParseException) {
      throw (ParseException)jjte001;
    }
    throw (Error)jjte001;
  } finally {
    if (jjtc001) {
      jjtree.closeNodeScope(jjtn001,  2);
    }
  }
/*@egen*/                
|/*@bgen(jjtree) #branchLink( 1) */
  {
    ASTbranchLink jjtn002 = new ASTbranchLink(JJTBRANCHLINK);
    boolean jjtc002 = true;
    jjtree.openNodeScope(jjtn002);
  }
  try {
/*@egen*/ ( label())/*@bgen(jjtree)*/
  } catch (Throwable jjte002) {
    if (jjtc002) {
      jjtree.clearNodeScope(jjtn002);
      jjtc002 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte002 instanceof RuntimeException) {
      throw (RuntimeException)jjte002;
    }
    if (jjte002 instanceof ParseException) {
      throw (ParseException)jjte002;
    }
    throw (Error)jjte002;
  } finally {
    if (jjtc002) {
      jjtree.closeNodeScope(jjtn002,  1);
    }
  }
/*@egen*/               
)
}

void branchNode()      :
{}
{
  LOOKAHEAD(2)
  (branchLink())
| (branch())  
}

void closeOrCAUp()      :
{}
{
  LOOKAHEAD(2)/*@bgen(jjtree) #closeAUp(true) */
  {
    ASTcloseAUp jjtn001 = new ASTcloseAUp(JJTCLOSEAUP);
    boolean jjtc001 = true;
    jjtree.openNodeScope(jjtn001);
  }
  try {
/*@egen*/
  ("]" "!")/*@bgen(jjtree)*/
  } finally {
    if (jjtc001) {
      jjtree.closeNodeScope(jjtn001, true);
    }
  }
/*@egen*/            
|/*@bgen(jjtree) #close(true) */
  {
    ASTclose jjtn002 = new ASTclose(JJTCLOSE);
    boolean jjtc002 = true;
    jjtree.openNodeScope(jjtn002);
  }
  try {
/*@egen*/ ("]")/*@bgen(jjtree)*/
  } finally {
    if (jjtc002) {
      jjtree.closeNodeScope(jjtn002, true);
    }
  }
/*@egen*/         
}

void regOrRegShift()      :
{}
{
  LOOKAHEAD(2)
  (reg_shift())
| (register())
}

void numOrNumShift()      :
{}
{
  LOOKAHEAD(2)
  (num_shift())
| (number())
}

void reg_shift()      :
{}
{/*@bgen(jjtree) #shiftLS( 3) */
 {
   ASTshiftLS jjtn001 = new ASTshiftLS(JJTSHIFTLS);
   boolean jjtc001 = true;
   jjtree.openNodeScope(jjtn001);
 }
 try {
/*@egen*/
 (register() "," (lsl() (number() | register()) | lsr() (number() | register()) | asr() (number() | register()) | ror() (number() | register()) ) )/*@bgen(jjtree)*/
 } catch (Throwable jjte001) {
   if (jjtc001) {
     jjtree.clearNodeScope(jjtn001);
     jjtc001 = false;
   } else {
     jjtree.popNode();
   }
   if (jjte001 instanceof RuntimeException) {
     throw (RuntimeException)jjte001;
   }
   if (jjte001 instanceof ParseException) {
     throw (ParseException)jjte001;
   }
   throw (Error)jjte001;
 } finally {
   if (jjtc001) {
     jjtree.closeNodeScope(jjtn001,  3);
   }
 }
/*@egen*/            
}

void num_shift()      :
{}
{/*@bgen(jjtree) #shiftF( 3) */
 {
   ASTshiftF jjtn001 = new ASTshiftF(JJTSHIFTF);
   boolean jjtc001 = true;
   jjtree.openNodeScope(jjtn001);
 }
 try {
/*@egen*/
 (number() shift() num())/*@bgen(jjtree)*/
 } catch (Throwable jjte001) {
   if (jjtc001) {
     jjtree.clearNodeScope(jjtn001);
     jjtc001 = false;
   } else {
     jjtree.popNode();
   }
   if (jjte001 instanceof RuntimeException) {
     throw (RuntimeException)jjte001;
   }
   if (jjte001 instanceof ParseException) {
     throw (ParseException)jjte001;
   }
   throw (Error)jjte001;
 } finally {
   if (jjtc001) {
     jjtree.closeNodeScope(jjtn001,  3);
   }
 }
/*@egen*/           
}

void amode():
{/*@bgen(jjtree) amode */
 ASTamode jjtn000 = new ASTamode(JJTAMODE);
 boolean jjtc000 = true;
 jjtree.openNodeScope(jjtn000);
/*@egen*/Token t;}
{/*@bgen(jjtree) amode */
  try {
/*@egen*/
  t = < AMODE >/*@bgen(jjtree)*/
                {
                  jjtree.closeNodeScope(jjtn000, true);
                  jjtc000 = false;
                }
/*@egen*/ { jjtn000.value = t.image;  }/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}
  
void cond():
{/*@bgen(jjtree) cond */
 ASTcond jjtn000 = new ASTcond(JJTCOND);
 boolean jjtc000 = true;
 jjtree.openNodeScope(jjtn000);
/*@egen*/Token t;}
{/*@bgen(jjtree) cond */
  try {
/*@egen*/
  t = < COND >/*@bgen(jjtree)*/
               {
                 jjtree.closeNodeScope(jjtn000, true);
                 jjtc000 = false;
               }
/*@egen*/ { jjtn000.value = t.image; jjtn000.data.put("reg", t.image.toString()); }/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void lsl():
{/*@bgen(jjtree) lsl */
 ASTlsl jjtn000 = new ASTlsl(JJTLSL);
 boolean jjtc000 = true;
 jjtree.openNodeScope(jjtn000);
/*@egen*/Token t;}
{/*@bgen(jjtree) lsl */
  try {
/*@egen*/
  t= < LSL >/*@bgen(jjtree)*/
              {
                jjtree.closeNodeScope(jjtn000, true);
                jjtc000 = false;
              }
/*@egen*/  { jjtn000.value = t.image.toString(); }/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void lsr():
{/*@bgen(jjtree) lsr */
 ASTlsr jjtn000 = new ASTlsr(JJTLSR);
 boolean jjtc000 = true;
 jjtree.openNodeScope(jjtn000);
/*@egen*/Token t;}
{/*@bgen(jjtree) lsr */
  try {
/*@egen*/
  t= < LSR >/*@bgen(jjtree)*/
              {
                jjtree.closeNodeScope(jjtn000, true);
                jjtc000 = false;
              }
/*@egen*/  { jjtn000.value = t.image.toString(); }/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void asr():
{/*@bgen(jjtree) asr */
 ASTasr jjtn000 = new ASTasr(JJTASR);
 boolean jjtc000 = true;
 jjtree.openNodeScope(jjtn000);
/*@egen*/Token t;}
{/*@bgen(jjtree) asr */
  try {
/*@egen*/
  t= < ASR >/*@bgen(jjtree)*/
              {
                jjtree.closeNodeScope(jjtn000, true);
                jjtc000 = false;
              }
/*@egen*/  { jjtn000.value = t.image.toString(); }/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void ror():
{/*@bgen(jjtree) ror */
 ASTror jjtn000 = new ASTror(JJTROR);
 boolean jjtc000 = true;
 jjtree.openNodeScope(jjtn000);
/*@egen*/Token t;}
{/*@bgen(jjtree) ror */
  try {
/*@egen*/
  t= < ROR >/*@bgen(jjtree)*/
              {
                jjtree.closeNodeScope(jjtn000, true);
                jjtc000 = false;
              }
/*@egen*/  { jjtn000.value = t.image.toString(); }/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void shift():
{/*@bgen(jjtree) shift */
 ASTshift jjtn000 = new ASTshift(JJTSHIFT);
 boolean jjtc000 = true;
 jjtree.openNodeScope(jjtn000);
/*@egen*/Token t;}
{/*@bgen(jjtree) shift */
  try {
/*@egen*/
  t = < SHIFT >/*@bgen(jjtree)*/
                {
                  jjtree.closeNodeScope(jjtn000, true);
                  jjtc000 = false;
                }
/*@egen*/ { jjtn000.value = t.image.toString(); }/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/ 
}

void register() :
{/*@bgen(jjtree) register */
 ASTregister jjtn000 = new ASTregister(JJTREGISTER);
 boolean jjtc000 = true;
 jjtree.openNodeScope(jjtn000);
/*@egen*/Token t;}
{/*@bgen(jjtree) register */
  try {
/*@egen*/
  t= < REGISTER >/*@bgen(jjtree)*/
                  {
                    jjtree.closeNodeScope(jjtn000, true);
                    jjtc000 = false;
                  }
/*@egen*/ { jjtn000.data.put("reg", t.image.toString()); }/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void number():
{/*@bgen(jjtree) number */
 ASTnumber jjtn000 = new ASTnumber(JJTNUMBER);
 boolean jjtc000 = true;
 jjtree.openNodeScope(jjtn000);
/*@egen*/Token t;}
{/*@bgen(jjtree) number */
  try {
/*@egen*/
  t= < NUMBER >/*@bgen(jjtree)*/
                {
                  jjtree.closeNodeScope(jjtn000, true);
                  jjtc000 = false;
                }
/*@egen*/ { jjtn000.data.put("value", t.image.toString()); }/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void hexa():
{/*@bgen(jjtree) hexa */
 ASThexa jjtn000 = new ASThexa(JJTHEXA);
 boolean jjtc000 = true;
 jjtree.openNodeScope(jjtn000);
/*@egen*/Token t;}
{/*@bgen(jjtree) hexa */
 try {
/*@egen*/
 t = < HEXA >/*@bgen(jjtree)*/
              {
                jjtree.closeNodeScope(jjtn000, true);
                jjtc000 = false;
              }
/*@egen*/ { jjtn000.data.put("hexa", t.image.toString()); }/*@bgen(jjtree)*/
 } finally {
   if (jjtc000) {
     jjtree.closeNodeScope(jjtn000, true);
   }
 }
/*@egen*/
}

void num():
{/*@bgen(jjtree) num */
 ASTnum jjtn000 = new ASTnum(JJTNUM);
 boolean jjtc000 = true;
 jjtree.openNodeScope(jjtn000);
/*@egen*/Token t;}
{/*@bgen(jjtree) num */
 try {
/*@egen*/
 t = < NUM >/*@bgen(jjtree)*/
              {
                jjtree.closeNodeScope(jjtn000, true);
                jjtc000 = false;
              }
/*@egen*/  { jjtn000.data.put("num", t.image.toString()); }/*@bgen(jjtree)*/
 } finally {
   if (jjtc000) {
     jjtree.closeNodeScope(jjtn000, true);
   }
 }
/*@egen*/
}

void label():
{/*@bgen(jjtree) label */
 ASTlabel jjtn000 = new ASTlabel(JJTLABEL);
 boolean jjtc000 = true;
 jjtree.openNodeScope(jjtn000);
/*@egen*/Token t;}
{/*@bgen(jjtree) label */
 try {
/*@egen*/
 t = < LABEL >/*@bgen(jjtree)*/
                {
                  jjtree.closeNodeScope(jjtn000, true);
                  jjtc000 = false;
                }
/*@egen*/  { jjtn000.value = t.image.toString(); }/*@bgen(jjtree)*/
 } finally {
   if (jjtc000) {
     jjtree.closeNodeScope(jjtn000, true);
   }
 }
/*@egen*/
}